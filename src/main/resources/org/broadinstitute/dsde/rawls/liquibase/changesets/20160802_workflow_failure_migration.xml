<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog logicalFilePath="dummy" xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-1">
        <sql stripComments="true">
            DROP PROCEDURE IF EXISTS migrate_workflow_failures;
        </sql>
    </changeSet>

    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-2">
        <sql stripComments="true">
            ALTER TABLE WORKFLOW_FAILURE DROP FOREIGN KEY FK_WF_FAILURE_SUB;
        </sql>
    </changeSet>

    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-3">
        <sql stripComments="true">
            ALTER TABLE WORKFLOW_FAILURE DROP FOREIGN KEY FK_WF_FAILURE_ENTITY;
        </sql>
    </changeSet>

    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-4">
        <sql stripComments="true">
            ALTER TABLE WORKFLOW_ERROR DROP FOREIGN KEY FK_WF_ERR_FAILURE;
        </sql>
    </changeSet>

    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-5">
        <createProcedure>
            CREATE PROCEDURE migrate_workflow_failures
            ()
            BEGIN

            SET @count = (SELECT COUNT(*) FROM WORKFLOW_FAILURE);
            WHILE @count > 0 DO

            SET @oldId = (SELECT ID FROM WORKFLOW_FAILURE ORDER BY ID ASC LIMIT 1);

            SET @entityId = (SELECT wf.entity_id FROM WORKFLOW_FAILURE wf WHERE wf.ID = @oldId ORDER BY wf.ID ASC LIMIT 1);

            SET @submissionId = (SELECT s.ID FROM SUBMISSION s JOIN WORKFLOW_FAILURE wf ON wf.SUBMISSION_ID = s.ID WHERE wf.ID = @oldId ORDER BY wf.ID ASC LIMIT 1);

            SET @statusLastChanged = (SELECT s.DATE_SUBMITTED FROM WORKFLOW_FAILURE wf JOIN SUBMISSION s ON wf.SUBMISSION_ID = s.ID ORDER BY wf.ID ASC LIMIT 1);

            INSERT INTO WORKFLOW (SUBMISSION_ID, STATUS, STATUS_LAST_CHANGED, entity_id, record_version)
            SELECT wf.SUBMISSION_ID,
            'Failed',
            s.DATE_SUBMITTED,
            wf.entity_id,
            0
            FROM WORKFLOW_FAILURE wf
            JOIN SUBMISSION s ON wf.SUBMISSION_ID = s.ID WHERE wf.ID = @oldId LIMIT 1;

            SET @newId = (SELECT ID FROM WORKFLOW w WHERE w.entity_id = @entityId AND w.SUBMISSION_ID = @submissionId LIMIT 1);

            INSERT INTO WORKFLOW_MESSAGE (WORKFLOW_ID, MESSAGE)
            SELECT @newId, ERROR_TEXT FROM WORKFLOW_ERROR we WHERE we.WORKFLOW_FAILURE_ID = @oldId;

            UPDATE SUBMISSION_VALIDATION sv SET sv.WORKFLOW_FAILURE_ID = null, sv.WORKFLOW_ID = @newId WHERE sv.WORKFLOW_FAILURE_ID = @oldId;

            DELETE FROM WORKFLOW_ERROR WHERE WORKFLOW_FAILURE_ID = @oldId;

            DELETE FROM WORKFLOW_FAILURE WHERE ID = @oldId;
            SET @count = (SELECT COUNT(*) FROM WORKFLOW_FAILURE);
            END WHILE;

            ALTER TABLE SUBMISSION_VALIDATION DROP FOREIGN KEY FK_SUB_VALIDATION_FAIL;
            ALTER TABLE SUBMISSION_VALIDATION DROP INDEX FK_SUB_VALIDATION_FAIL;
            ALTER TABLE SUBMISSION_VALIDATION DROP COLUMN WORKFLOW_FAILURE_ID;

            DROP TABLE WORKFLOW_ERROR;

            DROP TABLE WORKFLOW_FAILURE;

            END;
        </createProcedure>
    </changeSet>

    <changeSet logicalFilePath="dummmy" author="ansingh" id="workflow-failure-migration-6">
        <sql stripComments="true">
            CALL migrate_workflow_failures();
        </sql>

    </changeSet>

</databaseChangeLog>