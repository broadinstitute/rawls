security:
  - authorization:
      - openid
      - email
      - profile
openapi: 3.0.1
paths:
  /api/workspaces/tags:
    get:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                description: list of all tags used in FireCloud and their associated
                  frequencies
                items:
                  $ref: '#/components/schemas/WorkspaceTag'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - name: q
          in: query
          description: Query string
          schema:
            type: string
      tags:
        - workspaces
      operationId: getTags
      description: Get all tags used in FireCloud (for autocomplete)
      summary: Get tags
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissionsCount:
    get:
      description: Counts all submissions run in this workspace, grouped by status.
        Returns a map of status:count.
      summary: Count submissions by status
      operationId: countSubmissions
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                description: Map[String,Int]
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - submissions
      parameters:
        - in: path
          description: Workspace Namespace
          required: true
          name: workspaceNamespace
          schema:
            type: string
        - required: true
          in: path
          schema:
            type: string
          description: Workspace Name
          name: workspaceName
  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/rename:
    post:
      operationId: rename_method_config
      description: 'Rename method configuration.

        The workspace name and namespace in the HTTP body must match those in the
        URI.

        409 may be returned if there''s already a method configuration at the target
        location.

        '
      requestBody:
        description: New Method Configuration Name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodConfigurationName'
        required: true
      parameters:
        - description: Workspace Namespace
          name: workspaceNamespace
          schema:
            type: string
          required: true
          in: path
        - schema:
            type: string
          in: path
          required: true
          description: Workspace Name
          name: workspaceName
        - schema:
            type: string
          description: Method Configuration Namespace
          in: path
          name: configNamespace
          required: true
        - in: path
          name: configName
          description: Method Configuration Name
          schema:
            type: string
          required: true
      x-codegen-request-body-name: newMethodConfigurationName
      responses:
        '404':
          description: Workspace or Method Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Workspace details in payload don't match the URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Method config with the new name already exists in workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '204':
          description: Successful Request
          content: {}
      summary: rename method configuration in a workspace
      tags:
        - methodconfigs
  /api/admin/submissions/queueStatusByUser:
    get:
      responses:
        '200':
          description: Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowQueueStatusByUserResponse'
        '403':
          description: You must be an admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: workflowQueueStatusByUser
      tags:
        - admin
        - submissions
      description: List workflow counts by queueing state and by user
      summary: workflow queue status by user
  /api/workspaces/{workspaceNamespace}/{workspaceName}:
    get:
      description: 'Get a single workspace''s details, optionally filtered to only
        the specified fields. See additional GET methods in this section to retrieve
        additional details about the workspace. For instance, this API only returns
        the workspace''s owners; use the GET .../acl method to retrieve the full list
        of all users at all permission levels.

        '
      operationId: listWorkspaceDetails
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
        '400':
          description: Unrecognized query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - workspaces
      parameters:
        - in: path
          schema:
            type: string
          description: Workspace Namespace
          required: true
          name: workspaceNamespace
        - description: Workspace Name
          in: path
          name: workspaceName
          required: true
          schema:
            type: string
        - style: form
          explode: false
          in: query
          name: fields
          schema:
            type: array
            items:
              type: string
          description: 'When specified, include only these keys in the response payload
          and exclude other keys. Accepts a comma-delimited list of values. To include
          a nested key, specify the key''s path using a dot delimiter; for example,
          to include {"workspace": {"attributes": {}}}, specify "workspace.attributes".
          Legal values are any first-level key in the response, any first-level key
          inside the {"workspace": {}} object, and any first-level key inside the
          {"workspace": {"attributes": {}}} object. If omitted, will return the full
          response payload.

          '
      summary: Get workspace details
    delete:
      tags:
        - workspaces
      operationId: delete_workspace
      responses:
        '202':
          description: Delete request accepted. Workspace bucket will be deleted within
            24 hours.
          content: {}
        '403':
          description: Insufficient permissions to delete workspace (must be owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: Delete a workspace
      summary: Delete workspace
      parameters:
        - schema:
            type: string
          description: Workspace Namespace
          name: workspaceNamespace
          in: path
          required: true
        - in: path
          description: Workspace Name
          required: true
          name: workspaceName
          schema:
            type: string
    patch:
      x-codegen-request-body-name: entityUpdateJson
      tags:
        - workspaces
      operationId: update_workspace
      summary: Update attributes of a workspace
      requestBody:
        description: Update operations
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeUpdateOperationArray'
        required: true
      description: Update workspace attributes
      responses:
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDetails'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Insufficient permissions to edit workspace attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Attribute does not exist or is of an unexpected type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - name: workspaceNamespace
          in: path
          required: true
          schema:
            type: string
          description: Workspace Namespace
        - required: true
          description: Workspace Name
          in: path
          name: workspaceName
          schema:
            type: string
  /api/notifications/workspace/{workspaceNamespace}/{workspaceName}:
    get:
      operationId: workspaceNotifications
      parameters:
        - schema:
            type: string
          required: true
          in: path
          name: workspaceNamespace
          description: workspace namespace
        - in: path
          description: workspace name
          required: true
          name: workspaceName
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationType'
      summary: Gets the notifications available for a workspace
      tags:
        - notifications
  /api/billing:
    post:
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
      requestBody:
        description: create project request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'
        required: true
      description: create new billing project in rawls and google
      operationId: createBillingProjectFull
      x-codegen-request-body-name: createProjectRequest
      tags:
        - billing
      responses:
        '409':
          description: project already exists in rawls or google
          content: {}
        '400':
          description: firecloud billing user must be a user of the billing account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '204':
          description: Successfully Created Billing Project in Rawls and Google
          content: {}
        '403':
          description: You must be a user of the google billing account and have permissions
            on the service perimeter if one is specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: create billing project in rawls and google
  /api/workspaces/{workspaceNamespace}/{workspaceName}/disableRequesterPaysForLinkedServiceAccounts:
    put:
      summary: Disable Requester Pays for linked service accounts
      operationId: disableRequesterPaysForLinkedServiceAccounts
      tags:
        - workspaces
      responses:
        '204':
          description: 'In all cases whether or not the workspace exists or user has
            access. If there were linked service accounts they were removed from the
            workspace but this api does not indicate that anything was done (for security
            reasons).

            '
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: Disable Requester Pays for the user's linked service accounts in
        a workspace
      parameters:
        - required: true
          schema:
            type: string
          description: Workspace Namespace
          in: path
          name: workspaceNamespace
        - in: path
          description: Workspace Name
          required: true
          name: workspaceName
          schema:
            type: string
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/validate:
    post:
      tags:
        - submissions
      summary: Validate submission
      x-codegen-request-body-name: submission
      responses:
        '502':
          description: Trouble talking to Agora
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Expression evaluation failed or entities are not of type required
            by method config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace, Method Configuration, Data Reference, or Entity
            not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '200':
          description: Validation Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionValidationReport'
      operationId: validateSubmission
      description: Validate expression syntax for a submission
      requestBody:
        description: Description of a submission.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionRequest'
        required: true
      parameters:
        - in: path
          name: workspaceNamespace
          required: true
          schema:
            type: string
          description: Workspace Namespace
        - required: true
          in: path
          name: workspaceName
          description: Workspace Name
          schema:
            type: string
  /api/user/billing/{projectName}:
    get:
      description: billing project status
      tags:
        - billing
        - users
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: projectName
          description: Name of the billing project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawlsBillingProjectStatus'
        '404':
          description: Project Not Found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      operationId: billingProjectStatus
      summary: billing project status
    delete:
      operationId: deleteBillingProject
      summary: delete billing project
      responses:
        '204':
          description: Successfully delete billing project
        '400':
          description: Project cannot be deleted because it contains workspaces.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: You must be a project owner to delete billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - in: path
          required: true
          schema:
            type: string
          description: Name of the billing project
          name: projectName
      description: delete billing project
      tags:
        - billing
        - users
  /api/methodconfigs/copyFromMethodRepo:
    post:
      requestBody:
        description: Import from Method Repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodRepoConfigurationImport'
        required: true
      operationId: copy_repo_configuration
      summary: Copy method configuration from the method repository
      description: Copy a method configuration from method repo to a workspace
      x-codegen-request-body-name: methodRepoImport
      tags:
        - methodconfigs
      responses:
        '404':
          description: Source method configuration not found in method repo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '422':
          description: Error parsing source method configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Invalid attribute namespace(s) in outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Destination method configuration by that name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly created method configuration
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodConfiguration'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/billing/v2:
    post:
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
      description: create new billing project in rawls
      responses:
        '201':
          description: Successfully Created Billing Project in Rawls
        '400':
          description: both you and firecloud billing user must be a user of the billing
            account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: project already exists in rawls
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: create billing project in rawls
      operationId: createBillingProjectFullV2
      x-codegen-request-body-name: createProjectRequest
      tags:
        - billing_v2
      requestBody:
        description: create project request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRawlsBillingProjectFullRequest'
        required: true
  /api/admin/project/registration/{projectName}:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              required:
                - newOwnerEmail
                - newOwnerToken
              type: object
              properties:
                newOwnerEmail:
                  type: string
                  description: Email of the current owner
                newOwnerToken:
                  type: string
                  description: OAuth2Token of the current owner
        required: true
      x-codegen-request-body-name: ownerInfo
      operationId: unregisterBillingProject
      responses:
        '204':
          description: Successful project record removal
          content: {}
        '403':
          description: You must be an admin to call this endpoint.
          content: {}
        '404':
          description: Missing required parameter
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      summary: remove the record for a billing project
      parameters:
        - name: projectName
          in: path
          schema:
            type: string
          required: true
          description: name of the project
      tags:
        - admin
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpdate:
    post:
      operationId: batch_update_entities
      description: Batch update entities into a workspace. All referenced entities
        must already exist.
      responses:
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Invalid attribute update operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '204':
          description: Entities updated
          content: {}
        '403':
          description: User does not have permission to update attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - schema:
            type: string
          in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
        - required: true
          description: Workspace Name
          schema:
            type: string
          in: path
          name: workspaceName
      tags:
        - entities
      summary: Batch update entities
      requestBody:
        description: Entity update definitions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityUpdateDefinition'
        required: true
      x-codegen-request-body-name: batchUpdateJson
  /api/workspaces/entities/copy:
    post:
      x-codegen-request-body-name: entityCopyDefinition
      requestBody:
        description: Source and destination for entities
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityCopyDefinition'
        required: true
      tags:
        - entities
      responses:
        '404':
          description: Source workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: There are conflicts in your copy operation. Retry with the
            paramater linkExistingEntities=true to link all soft conflicts to the
            entities that already exist in your workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityCopyResponse'
        '201':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityCopyResponse'
        '422':
          description: Destination workspace must match source's authorization domain,
            if the source has one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: copy entities from one workspace into another workspace
      operationId: copy_entities
      parameters:
        - name: linkExistingEntities
          in: query
          description: true to link new entities to existing entities, false to fail
            instead of link
          schema:
            type: boolean
            default: false
      description: Copy entities from one workspace to another
  /api/billing/v2/{projectId}/members/{workbenchRole}/{email}:
    put:
      responses:
        '200':
          description: Successfully Added User/Group To Billing Project
        '403':
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: add user or group to billing project the caller owns
      tags:
        - billing_v2
      operationId: addUserToBillingProject
      summary: add user or group to billing project the caller owns
      parameters:
        - name: projectId
          description: Project ID
          in: path
          required: true
          schema:
            type: string
        - in: path
          required: true
          description: role of user for project
          schema:
            type: string
            enum:
              - user
              - owner
          name: workbenchRole
        - name: email
          schema:
            type: string
          required: true
          in: path
          description: email of user or group to add
    delete:
      parameters:
        - description: Project ID
          name: projectId
          schema:
            type: string
          required: true
          in: path
        - in: path
          name: workbenchRole
          required: true
          schema:
            type: string
            enum:
              - user
              - owner
          description: role of user for project
        - schema:
            type: string
          name: email
          in: path
          description: email of user or group to remove
          required: true
      operationId: removeUserFromBillingProject
      tags:
        - billing_v2
      responses:
        '200':
          description: Successfully Removed User From Billing Project
        '403':
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: remove user or group from billing project the caller owns
      description: remove user or group from billing project the caller owns
  /api/workspaces/{workspaceNamespace}/{workspaceName}/enableRequesterPaysForLinkedServiceAccounts:
    put:
      summary: Enable Requester Pays for linked service accounts
      responses:
        '204':
          description: Successful Request
          content: {}
        '403':
          description: Insufficient permissions to enable Requester Pays for workspace.
            Writer and higher permissions required on workspace.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: 'Enable Requester Pays for the user''s linked service accounts
        in a workspace. Grants the serviceusage.services.use permission in the project
        associated to the workspace to each service account linked in the account
        linking service (Bond).

        '
      parameters:
        - schema:
            type: string
          description: Workspace Namespace
          required: true
          in: path
          name: workspaceNamespace
        - description: Workspace Name
          schema:
            type: string
          in: path
          name: workspaceName
          required: true
      tags:
        - workspaces
      operationId: enableRequesterPaysForLinkedServiceAccounts
  /api/admin/submissions/{workspaceNamespace}/{workspaceName}/{submissionId}:
    delete:
      parameters:
        - schema:
            type: string
          in: path
          required: true
          name: workspaceNamespace
          description: workspaceNamespace of the submission
        - name: workspaceName
          description: workspaceName of the submission
          schema:
            type: string
          in: path
          required: true
        - description: id of the submission
          name: submissionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful Request
          content: {}
        '403':
          description: You must be an admin to abort a submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '502':
          description: Trouble talking to Google or Cromwell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: adminAbortSubmission
      tags:
        - admin
        - submissions
      summary: abort a submission
      description: Administratively abort an active submission
  /api/admin/workspaces:
    get:
      summary: list all workspaces
      description: List all workspaces
      operationId: listAllWorkspaces
      tags:
        - admin
        - workspaces
      parameters:
        - name: attributeName
          in: query
          description: Optional workspace attribute to filter on
          schema:
            type: string
        - name: valueString
          in: query
          description: attribute value (for String attributes)
          schema:
            type: string
        - name: valueNumber
          in: query
          description: attribute value (for numerical attributes)
          schema:
            type: number
        - name: valueBoolean
          in: query
          description: attribute value (for boolean attributes)
          schema:
            type: boolean
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceDetails'
        '403':
          description: You must be an admin to list workspaces
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/billing/v2/{projectId}/members:
    get:
      description: list members of billing project the caller owns
      tags:
        - billing_v2
      summary: list members of billing project the caller owns
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawlsBillingProjectMember'
        '403':
          description: You must be a project owner to view the members of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: listBillingProjectMembers
      parameters:
        - required: true
          schema:
            type: string
          description: Project ID
          name: projectId
          in: path
  /api/admin/user/role/curator/{userEmail}:
    put:
      tags:
        - admin
      parameters:
        - description: email of user
          in: path
          required: true
          name: userEmail
          schema:
            type: string
      description: adds a user to the list of curators
      summary: Add a library curator
      operationId: adminAddCurator
      responses:
        '200':
          description: Successful Request
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      parameters:
        - schema:
            type: string
          name: userEmail
          description: email of user
          required: true
          in: path
      description: removes a user from the list of curators
      tags:
        - admin
      summary: Remove a library curator
      responses:
        '200':
          description: Successful Request
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: adminRemoveCurator
  /api/submissions/queueStatus:
    get:
      tags:
        - submissions
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowQueueStatusResponse'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: List workflow counts by queueing state
      summary: workflow queue status
      operationId: workflowQueueStatus
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs:
    get:
      tags:
        - submissions
      summary: Get workflow outputs
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowOutputs'
        '404':
          description: Workspace, Submission or Workflow not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '502':
          description: Unable to retrieve outputs or logs from Cromwell
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - description: Workspace Namespace
          name: workspaceNamespace
          in: path
          schema:
            type: string
          required: true
        - schema:
            type: string
          required: true
          in: path
          name: workspaceName
          description: Workspace Name
        - schema:
            type: string
          required: true
          description: Submission Id
          in: path
          name: submissionId
        - in: path
          schema:
            type: string
          required: true
          description: Workflow Id
          name: workflowId
      description: Retrieve outputs for a workflow
      operationId: getWorkflowOutputs
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}:
    get:
      summary: Monitor submission status
      parameters:
        - schema:
            type: string
          in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
        - required: true
          name: workspaceName
          schema:
            type: string
          description: Workspace Name
          in: path
        - name: submissionId
          in: path
          schema:
            type: string
          required: true
          description: Submission Id
      tags:
        - submissions
      description: Monitor submission status
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '404':
          description: Workspace or submission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: getSubmissionStatus
    delete:
      responses:
        '204':
          description: Submission successfully aborted
          content: {}
        '404':
          description: Workspace or submission not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '502':
          description: Unable to abort all workflows in this submission
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - submissions
      description: Abort a currently running submission
      operationId: abortSubmission
      summary: Abort submission
      parameters:
        - description: Workspace Namespace
          required: true
          name: workspaceNamespace
          schema:
            type: string
          in: path
        - name: workspaceName
          schema:
            type: string
          in: path
          description: Workspace Name
          required: true
        - required: true
          name: submissionId
          in: path
          schema:
            type: string
          description: Submission Id
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}:
    get:
      tags:
        - entities
      responses:
        '200':
          description: List of entities in workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityQueryResponse'
        '404':
          description: Workspace or entity type does not exist
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/entityTypePathParam'
        - name: page
          in: query
          description: Page number, 1-indexed (default 1)
          schema:
            minimum: 1
            type: number
            default: 1
        - name: pageSize
          in: query
          description: Page size (default 10)
          schema:
            minimum: 1
            type: number
            default: 10
        - name: sortField
          in: query
          description: Sort field (default "name")
          schema:
            type: string
            default: name
        - name: sortDirection
          in: query
          description: Sort direction (asc or desc, default asc)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: filterTerms
          in: query
          description: Filter terms
          schema:
            type: string
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
      operationId: entityQuery
      summary: Paginated query for entities in a workspace
  /api/workspaces:
    get:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceListResponse'
        '400':
          description: Unrecognized query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - workspaces
      parameters:
        - explode: false
          in: query
          name: fields
          description: 'When specified, include only these keys in the response payload
          and exclude other keys. Accepts a comma-delimited list of values. To include
          a nested key, specify the key''s path using a dot delimiter; for example,
          to include {"workspace": {"attributes": {}}}, specify "workspace.attributes".
          Legal values are any first-level key in the response, any first-level key
          inside the {"workspace": {}} object, and any first-level key inside the
          {"workspace": {"attributes": {}}} object. If omitted, will return the full
          response payload.

          '
          style: form
          schema:
            type: array
            items:
              type: string
      operationId: listWorkspaces
      summary: List workspaces
      description: 'List all workspaces to which you have access, optionally filtered
        to only the specified fields. See the get-workspace API at GET /api/workspaces/{workspaceNamespace}/{workspaceName}
        to retrieve additional information about a given workspace.

        '
    post:
      operationId: createWorkspace
      tags:
        - workspaces
      summary: Create new workspace
      requestBody:
        description: Workspace contents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequest'
        required: true
      x-codegen-request-body-name: workspaceJson
      responses:
        '409':
          description: Workspace by that name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: User does not have access to create workspace in namespace
            or user does not have permission to set attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Workspace namespace is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly created workspace
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDetails'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: Create a new workspace
  /api/user/refreshToken:
    put:
      requestBody:
        description: refresh token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRefreshToken'
        required: true
      deprecated: true
      description: store a user's refresh token
      responses:
        '201':
          description: Successful Request
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - users
      x-codegen-request-body-name: refreshToken
      operationId: refreshToken
      summary: Store refresh token
  /api/admin/project/registration:
    post:
      x-codegen-request-body-name: createProjectRequest
      responses:
        '201':
          description: Successful project record creation
          content: {}
        '403':
          description: You must be an admin to call this endpoint.
          content: {}
        '404':
          description: Missing required parameter
          content: {}
        '500':
          description: Internal Server Error
          content: {}
      requestBody:
        description: create project request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RawlsBillingProjectTransfer'
        required: true
      summary: create a record of project ownership
      tags:
        - admin
      operationId: recordProjectOwnership
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/rename:
    post:
      operationId: renameEntity
      parameters:
        - schema:
            type: string
          in: path
          required: true
          description: Workspace Namespace
          name: workspaceNamespace
        - name: workspaceName
          description: Workspace Name
          schema:
            type: string
          in: path
          required: true
        - description: Entity Type
          in: path
          required: true
          schema:
            type: string
          name: entityType
        - description: Entity Name
          required: true
          in: path
          schema:
            type: string
          name: entityName
      description: Rename an entity
      tags:
        - entities
      summary: rename entity in a workspace
      x-codegen-request-body-name: newEntityNameJson
      requestBody:
        description: New entity name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityName'
        required: true
      responses:
        '204':
          description: Successful Request
          content: {}
        '404':
          description: Workspace or Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: New name for entity already exists in workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/evaluate:
    post:
      tags:
        - entities
      description: Evaluates an attribute expression taking the given entity as root
      x-codegen-request-body-name: expression
      responses:
        '200':
          description: Successful Request
          content: {}
        '400':
          description: Invalid entity expression
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace or Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - description: Workspace Namespace
          in: path
          required: true
          name: workspaceNamespace
          schema:
            type: string
        - schema:
            type: string
          description: Workspace Name
          name: workspaceName
          in: path
          required: true
        - in: path
          required: true
          description: Entity Type
          schema:
            type: string
          name: entityType
        - name: entityName
          description: Entity Name
          schema:
            type: string
          required: true
          in: path
      requestBody:
        description: Expression
        content:
          application/json:
            schema:
              type: string
        required: true
      operationId: evaluateExpression
      summary: evaluate expression on an entity
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities:
    get:
      summary: Entity type metadata
      description: 'Get entity type metadata: for each type, the number of entities
        of that type and all attribute names used'
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: object
                description: Map[String,EntityTypeMetadata]
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - name: useCache
          in: query
          description: True to read entity statistics from cache if cache is up to date,
            false to bypass cache (slower). Default is false.
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
      operationId: entity_type_metadata
      tags:
        - entities
    post:
      parameters:
        - name: workspaceNamespace
          description: Workspace Namespace
          schema:
            type: string
          in: path
          required: true
        - schema:
            type: string
          name: workspaceName
          in: path
          required: true
          description: Workspace Name
      summary: Create entity in a workspace
      requestBody:
        description: Entity data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
        required: true
      responses:
        '403':
          description: User does not have permission to update attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Entity already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Entity created
          headers:
            Location:
              description: The path to the newly created entity
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: entityJson
      description: Create entity
      tags:
        - entities
      operationId: create_entity
  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkBucketReadAccess:
    get:
      parameters:
        - in: path
          required: true
          name: workspaceNamespace
          description: Workspace Namespace
          schema:
            type: string
        - name: workspaceName
          required: true
          description: Workspace Name
          in: path
          schema:
            type: string
      operationId: readBucket
      responses:
        '200':
          description: Successful Request
          content: {}
        '403':
          description: Insufficient permissions to access workspace bucket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Read workspace bucket
      tags:
        - workspaces
      description: Read a workspace bucket
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpsert:
    post:
      x-codegen-request-body-name: batchUpsertJson
      description: Batch upsert (update or insert if not already there) entities into
        a workspace
      parameters:
        - required: true
          schema:
            type: string
          in: path
          name: workspaceNamespace
          description: Workspace Namespace
        - description: Workspace Name
          schema:
            type: string
          required: true
          name: workspaceName
          in: path
      responses:
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: User does not have permission to update attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '204':
          description: Entities upserted
          content: {}
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Invalid attribute update operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: batch upsert entities into a workspace
      operationId: batch_upsert_entities
      tags:
        - entities
      requestBody:
        description: Entity update definitions
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EntityUpdateDefinition'
        required: true
  /api/notifications/general:
    get:
      tags:
        - notifications
      summary: Gets the general notifications available
      operationId: generalNotifications
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationType'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/unlock:
    put:
      tags:
        - workspaces
      responses:
        '204':
          description: Successful Request
          content: {}
        '403':
          description: Insufficient permissions to lock workspace (must be owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Unlock workspace
      operationId: unlockWorkspace
      parameters:
        - name: workspaceNamespace
          description: Workspace Namespace
          schema:
            type: string
          required: true
          in: path
        - name: workspaceName
          in: path
          schema:
            type: string
          description: Workspace Name
          required: true
      description: Unlock a workspace
  /api/admin/submissions:
    get:
      summary: list active submissions
      description: List all active submissions in all workspaces
      operationId: listAllActiveSubmissions
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveSubmission'
        '403':
          description: You must be an admin to list active submissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '502':
          description: Trouble talking to Google
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - admin
        - submissions
  /api/billing/{projectId}/{workbenchRole}/{email}:
    put:
      parameters:
        - description: Project ID
          schema:
            type: string
          required: true
          in: path
          name: projectId
        - schema:
            type: string
            enum:
              - user
              - owner
          name: workbenchRole
          in: path
          description: role of user for project
          required: true
        - in: path
          schema:
            type: string
          description: email of user or group to add
          name: email
          required: true
      operationId: addUserToBillingProject
      tags:
        - billing
      description: add user or group to billing project the caller owns
      responses:
        '200':
          description: Successfully Added User/Group To Billing Project
          content: {}
        '403':
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: add user or group to billing project the caller owns
    delete:
      responses:
        '200':
          description: Successfully Removed User From Billing Project
          content: {}
        '403':
          description: You must be a project owner to add a user to a billing project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - billing
      parameters:
        - schema:
            type: string
          in: path
          name: projectId
          description: Project ID
          required: true
        - description: role of user for project
          schema:
            type: string
            enum:
              - user
              - owner
          name: workbenchRole
          required: true
          in: path
        - name: email
          schema:
            type: string
          description: email of user or group to remove
          required: true
          in: path
      operationId: removeUserFromBillingProject
      summary: remove user or group from billing project the caller owns
      description: remove user or group from billing project the caller owns
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/cost:
    get:
      parameters:
        - required: true
          description: Workspace Namespace
          schema:
            type: string
          in: path
          name: workspaceNamespace
        - schema:
            type: string
          description: Workspace Name
          name: workspaceName
          in: path
          required: true
        - in: path
          description: Submission Id
          required: true
          schema:
            type: string
          name: submissionId
        - name: workflowId
          description: Workflow Id
          in: path
          required: true
          schema:
            type: string
      description: Retrieve workflow cost, if available
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowCost'
        '404':
          description: Workspace, Submission or Workflow not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: getWorkflowCost
      summary: Get workflow cost
      tags:
        - submissions
  /status:
    get:
      description: status check for underlying systems
      tags:
        - status
      summary: status check for underlying systems
      operationId: systemStatus
      security: []
      responses:
        '200':
          description: All systems OK
          content: {}
        '500':
          description: Problem with one or more systems. See response for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots:
    parameters:
      - $ref: '#/components/parameters/workspaceNamespacePathParam'
      - $ref: '#/components/parameters/workspaceNamePathParam'
    get:
      operationId: enumerateDataRepoSnapshot
      description: Enumerate references to snapshots in the Terra Data Repo
      summary: List snapshots
      tags:
        - snapshots
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReferenceList'
        '404':
          description: Workspace not found or user lacks permissions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - required: true
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result
            set.
          name: offset
          example: 0
          in: query
        - required: true
          name: limit
          example: 10
          schema:
            type: integer
          description: The number of items to return.
          in: query
    post:
      tags:
        - snapshots
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReference'
        '404':
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Create a snapshot
      requestBody:
        description: Reference to the Data Repo snapshot
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedDataRepoSnapshot'
        required: true
      description: Add a reference to a snapshot in the Terra Data Repo
      x-codegen-request-body-name: namedDataRepoSnapshot
      operationId: createDataRepoSnapshot
  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketOptions:
    get:
      operationId: getWorkspaceBucketOptions
      parameters:
        - description: Workspace Namespace
          in: path
          schema:
            type: string
          name: workspaceNamespace
          required: true
        - required: true
          name: workspaceName
          in: path
          schema:
            type: string
          description: Workspace Name
      summary: Get metadata about the workspace bucket
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceBucketOptions'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - workspaces
      description: Returns metadata about the workspace bucket.
  /api/user/role/curator:
    get:
      tags:
        - users
      responses:
        '200':
          description: User is a curator
          content: {}
        '404':
          description: User is not a curator
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Query to see if you're a library curator
      operationId: isCurator
      description: gets the curator status of a user
  /api/workspaces/{workspaceNamespace}/{workspaceName}/accessInstructions:
    get:
      summary: Get access instructions for the workspace
      parameters:
        - schema:
            type: string
          required: true
          in: path
          description: workspace namespace
          name: workspaceNamespace
        - schema:
            type: string
          description: workspace name
          required: true
          in: path
          name: workspaceName
      tags:
        - workspaces
      operationId: getWorkspaceAccessInstructions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagedGroupAccessInstructions'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/lock:
    put:
      operationId: lockWorkspace
      parameters:
        - required: true
          name: workspaceNamespace
          in: path
          description: Workspace Namespace
          schema:
            type: string
        - description: Workspace Name
          in: path
          schema:
            type: string
          required: true
          name: workspaceName
      tags:
        - workspaces
      description: Lock a workspace
      responses:
        '404':
          description: Workspace Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Workspace cannot be locked due to running submissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '204':
          description: Successful Request
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Insufficient permissions to lock workspace (must be owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Lock workspace
  /api/methodconfigs/inputsOutputs:
    post:
      operationId: method_inputs_outputs
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodInputsOutputs'
        '400':
          description: Method WDL can't be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: No such method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      requestBody:
        description: name of method to use for template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodRepoMethod'
        required: true
      x-codegen-request-body-name: methodName
      summary: Get information about a method's inputs and outputs
      tags:
        - methodconfigs
      description: Get information about a method's inputs and outputs
  /api/workspaces/{workspaceNamespace}/{workspaceName}/catalog:
    get:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceCatalog'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - schema:
            type: string
          name: workspaceNamespace
          required: true
          description: Workspace Namespace
          in: path
        - in: path
          required: true
          description: Workspace Name
          schema:
            type: string
          name: workspaceName
      summary: Get catalog permissions
      description: Returns workspace catalog permissions for users and groups with
        the permission for the workspace
      tags:
        - workspaces
      operationId: getCatalog
    patch:
      requestBody:
        description: Series of Catalog updates for workspace
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkspaceCatalog'
        required: true
      description: Edit catalog permissions for a workspace
      parameters:
        - name: workspaceNamespace
          in: path
          required: true
          description: Workspace Namespace
          schema:
            type: string
        - required: true
          name: workspaceName
          description: Workspace Name
          schema:
            type: string
          in: path
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceCatalogUpdateResponseList'
        '404':
          description: Workspace, user or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: updateCatalog
      summary: Update catalog permission
      x-codegen-request-body-name: catalogUpdates
      tags:
        - workspaces
  /api/methodconfigs/template:
    post:
      summary: Create a template for a method configuration from a method in the method
        repository
      x-codegen-request-body-name: methodName
      requestBody:
        description: name of method to use for template
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodRepoMethod'
        required: true
      operationId: method_config_template
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodConfiguration'
        '400':
          description: Method WDL can't be parsed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: No such method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: Create a template for a method configuration from a method in the
        method repository
      tags:
        - methodconfigs
  /api/workspaces/{workspaceNamespace}/{workspaceName}/clone:
    post:
      operationId: clone
      description: Clone a workspace
      parameters:
        - schema:
            type: string
          in: path
          required: true
          name: workspaceNamespace
          description: Workspace Namespace
        - name: workspaceName
          required: true
          description: Workspace Name
          in: path
          schema:
            type: string
      summary: Clone workspace
      responses:
        '422':
          description: Destination workspace must match source's authorization domain,
            if the dest has one
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Workspace namespace is not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Destination workspace already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly cloned workspace
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDetails'
        '403':
          description: User does not have access to create workspace in namespace
            or user does not have permission to set attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Source workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: workspaceRequest
      tags:
        - workspaces
      requestBody:
        description: Request for new workspace
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceRequestClone'
        required: true
  /api/user/billingAccounts:
    get:
      tags:
        - billing
        - users
      summary: list billing accounts for a user
      description: list billing accounts for a user
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
      operationId: listUserBillingAccounts
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                description: list of billing accounts for this user
                items:
                  $ref: '#/components/schemas/BillingAccount'
        '403':
          description: Forbidden. You probably missed a scope; more details in the
            ErrorReport's message field
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/servicePerimeters/{servicePerimeterName}/projects/{projectName}:
    put:
      description: Add a project to a service perimeter, must have 'add_to_service_perimeter'
        action on project and 'add_project' action on perimeter, included in owner
        role for both
      operationId: addProjectToServicePerimeter
      responses:
        '400':
          description: Project is already in perimeter or is not in 'Ready' state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Project does not exist or you do not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '202':
          description: Successful request, check the project's status for completion
          content: {}
        '404':
          description: Service Perimeter does not exist or you do not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Add a project to a service perimeter
      parameters:
        - description: Fully qualified google service perimeter name in the form of
            accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME], url encoded
          name: servicePerimeterName
          required: true
          schema:
            type: string
          in: path
        - required: true
          schema:
            type: string
          in: path
          description: Project name
          name: projectName
      tags:
        - servicePerimeters
  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}:
    get:
      tags:
        - methodconfigs
      description: Get a method configuration
      parameters:
        - schema:
            type: string
          in: path
          name: workspaceNamespace
          required: true
          description: Workspace Namespace
        - description: Workspace Name
          schema:
            type: string
          in: path
          required: true
          name: workspaceName
        - description: Method Configuration Namespace
          name: configNamespace
          schema:
            type: string
          required: true
          in: path
        - description: Method Configuration Name
          required: true
          in: path
          name: configName
          schema:
            type: string
      operationId: get_method_configuration
      summary: get method configuration in a workspace
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodConfiguration'
        '404':
          description: Workspace or Method Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    put:
      tags:
        - methodconfigs
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedMethodConfiguration'
        '400':
          description: Method configuration name and namespace in URI do not match
            those in JSON body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Invalid attribute namespace(s) in outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      requestBody:
        description: New Method Configuration contents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodConfiguration'
        required: true
      description: 'Add or overwrite a method configuration in a workspace.

        The method configuration name and namespace in the URI must match the values
        in the JSON.

        '
      operationId: overwrite_method_configuration
      parameters:
        - name: workspaceNamespace
          schema:
            type: string
          description: Workspace Namespace
          required: true
          in: path
        - schema:
            type: string
          in: path
          name: workspaceName
          description: Workspace Name
          required: true
        - schema:
            type: string
          required: true
          in: path
          description: Method Configuration Namespace
          name: configNamespace
        - name: configName
          schema:
            type: string
          required: true
          description: Method Configuration Name
          in: path
      x-codegen-request-body-name: newMethodConfigJson
      summary: Add or overwrite method configuration in a workspace
    post:
      requestBody:
        description: New Method Configuration contents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodConfiguration'
        required: true
      x-codegen-request-body-name: newMethodConfigJson
      description: 'Update method configuration.

        Updates and moves the method configuration at the URI to the location in the
        request body.

        The location in the URI may be the same as the location in the request body.

        If the location in the request body matches the location in the URI, it is
        overwritten.

        If the location in the request body is different to the location in the URI,
        and there is a method config already at that location, 409 is returned.

        '
      parameters:
        - description: Workspace Namespace
          in: path
          required: true
          name: workspaceNamespace
          schema:
            type: string
        - required: true
          name: workspaceName
          description: Workspace Name
          schema:
            type: string
          in: path
        - description: Method Configuration Namespace
          required: true
          name: configNamespace
          in: path
          schema:
            type: string
        - name: configName
          required: true
          schema:
            type: string
          in: path
          description: Method Configuration Name
      tags:
        - methodconfigs
      summary: Update method configuration in a workspace
      operationId: update_method_configuration
      responses:
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedMethodConfiguration'
        '404':
          description: Workspace or method configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Invalid attribute namespace(s) in outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Method config with the new name already exists in workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      responses:
        '204':
          description: Successful Request
          content: {}
        '404':
          description: Workspace or Method Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: Delete a method configuration
      operationId: delete_method_configuration
      parameters:
        - description: Workspace Namespace
          schema:
            type: string
          name: workspaceNamespace
          required: true
          in: path
        - schema:
            type: string
          required: true
          description: Workspace Name
          name: workspaceName
          in: path
        - required: true
          name: configNamespace
          description: Method Configuration Namespace
          in: path
          schema:
            type: string
        - in: path
          required: true
          name: configName
          description: Method Configuration Name
          schema:
            type: string
      tags:
        - methodconfigs
      summary: delete method configuration in a workspace
  /api/billing/v2/{projectId}:
    get:
      operationId: getBillingProject
      summary: get billing project
      description: get billing project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawlsBillingProjectResponse'
        '404':
          description: Project Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - billing_v2
      parameters:
        - name: projectId
          required: true
          description: Id of the billing project
          schema:
            type: string
          in: path
    delete:
      summary: delete billing project
      description: delete billing project
      parameters:
        - description: Id of the billing project
          in: path
          required: true
          name: projectId
          schema:
            type: string
      tags:
        - billing_v2
      responses:
        '204':
          description: OK
        '404':
          description: Project Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: deleteBillingProject
  /api/admin/refreshToken/{userSubjectId}:
    delete:
      description: revoke and remove a user's refresh token
      parameters:
        - schema:
            type: string
          required: true
          in: path
          description: user's subject id
          name: userSubjectId
      responses:
        '200':
          description: user's refresh token revoked and removed
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Admin revoke and remove a user's refresh token
      tags:
        - admin
      deprecated: true
      operationId: admin_delete_refresh_token
  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots/{snapshotId}:
    parameters:
      - $ref: '#/components/parameters/workspaceNamespacePathParam'
      - $ref: '#/components/parameters/workspaceNamePathParam'
      - $ref: '#/components/parameters/snapshotIdPathParam'
    get:
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReference'
        '404':
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: getDataRepoSnapshot
      tags:
        - snapshots
      description: Get a reference to a snapshot in the Terra Data Repo
      summary: Get a snapshot
    patch:
      summary: Update name or description of a reference to a snapshot in the Terra
        Data Repo.
      tags:
        - snapshots
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        '204':
          description: Successful Request
        '404':
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: updateDataRepoSnapshot
    delete:
      description: Delete a workspace's reference to a snapshot in the Terra Data
        Repo
      summary: Delete a snapshot
      tags:
        - snapshots
      responses:
        '204':
          description: Successful Request
        '404':
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: deleteDataRepoSnapshot
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}:
    get:
      description: Get an entity
      summary: Get entity in a workspace
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/entityTypePathParam'
        - $ref: '#/components/parameters/entityNamePathParam'
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
      operationId: get_entity
      tags:
        - entities
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
        '404':
          description: Workspace or Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
    patch:
      responses:
        '403':
          description: User does not have permission to update attributes in the namespace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace or Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Attribute does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '200':
          description: Entity updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      x-codegen-request-body-name: attributeUpdateJson
      summary: Update entity in a workspace
      requestBody:
        description: Update operations for attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeUpdateOperationArray'
        required: false
      parameters:
        - in: path
          schema:
            type: string
          required: true
          description: Workspace Namespace
          name: workspaceNamespace
        - required: true
          name: workspaceName
          in: path
          description: Workspace Name
          schema:
            type: string
        - required: true
          schema:
            type: string
          name: entityType
          in: path
          description: Entity Type
        - description: Entity Name
          in: path
          schema:
            type: string
          required: true
          name: entityName
      tags:
        - entities
      description: Update an entity
      operationId: update_entity
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}:
    get:
      responses:
        '200':
          description: Successful Request
          content: {}
        '404':
          description: Workspace, Submission or Workflow not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Get call-level metadata for workflow
      tags:
        - submissions
      description: Get call-level metadata for workflow
      operationId: workflowMetadata
      parameters:
        - in: path
          name: workspaceNamespace
          schema:
            type: string
          required: true
          description: Workspace Namespace
        - schema:
            type: string
          required: true
          in: path
          description: Workspace Name
          name: workspaceName
        - schema:
            type: string
          required: true
          in: path
          name: submissionId
          description: Submission Id
        - description: Workflow Id
          in: path
          required: true
          name: workflowId
          schema:
            type: string
        - style: form
          in: query
          schema:
            type: array
            items:
              type: string
          description: 'When specified key(s) to include from the metadata. Matches
          any key starting with the value. May not be used with excludeKey. This applies
          to all keys in the response, including within nested blocks.

          '
          explode: true
          name: includeKey
        - in: query
          style: form
          description: 'When specified key(s) to exclude from the metadata. Matches
          any key starting with the value. May not be used with includeKey. This applies
          to all keys in the response, including within nested blocks.

          '
          schema:
            type: array
            items:
              type: string
          explode: true
          name: excludeKey
        - name: expandSubWorkflows
          in: query
          description: 'When true, metadata for sub workflows will be fetched and inserted
          automatically in the metadata response.

          '
          schema:
            type: boolean
            default: false
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete:
    post:
      summary: delete entities in a workspace
      responses:
        '204':
          description: Successful Request
          content: {}
        '400':
          description: Not all Entities exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Cannot create dangling references when deleting Entities -
            must specify whole set
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeEntityReference'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
      description: Delete entities
      tags:
        - entities
      requestBody:
        description: Set of entities to delete
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AttributeEntityReference'
        required: true
      x-codegen-request-body-name: entities
      operationId: delete_entities
  /version:
    get:
      description: get version information of this application
      operationId: version
      tags:
        - version
      responses:
        '200':
          description: Version information of this application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVersion'
      summary: get version information of this application
  /api/workflows/{workflowId}/genomics/{operationId}:
    get:
      responses:
        '200':
          description: operations info
          content: {}
        '404':
          description: workflow or jobId not found or no access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - workflows
      description: retrieve operations info from Google Genomics API
      parameters:
        - schema:
            type: string
          description: Workflow Id
          name: workflowId
          required: true
          in: path
        - schema:
            type: string
          name: operationId
          required: true
          description: operations job id; for PAPIv1 in the form of "operations/{id}",
            for PAPIv2 "projects/{project}/operations/{id}"
          in: path
      operationId: genomics_operations_get
      summary: retrieve operations info from Google Genomics API
  /api/methodconfigs/copy:
    post:
      description: Copy method configuration from another workspace
      summary: Copy method configuration in a workspace from another workspace
      operationId: copy_method_configuration
      responses:
        '404':
          description: Source workspace or method configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '409':
          description: Destination method configuration by that name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the copied method configuration
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodConfiguration'
        '403':
          description: Invalid attribute namespace(s) in outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: methodConfigurationNamePair
      tags:
        - methodconfigs
      requestBody:
        description: Source and destination method configuration names
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodConfigurationNamePair'
        required: true
  /api/methodconfigs/copyToMethodRepo:
    post:
      requestBody:
        description: Export to Method Repository
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodRepoConfigurationExport'
        required: true
      description: Copy method configuration from workspace to method repo
      operationId: copy_configuration_to_repo
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgoraEntity'
        '404':
          description: Source method configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: Copy method configuration from workspace to the method repository
      x-codegen-request-body-name: methodRepoExport
      tags:
        - methodconfigs
  /api/user/billing:
    get:
      summary: list billing projects for a user
      operationId: listUserBillingProjects
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                description: list of billing projects for this user
                items:
                  $ref: '#/components/schemas/RawlsBillingProjectMembership'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - billing
        - users
      description: list billing projects for a user
  /version/executionEngine:
    get:
      tags:
        - version
      responses:
        '200':
          description: The currently running version of the execution engine
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionEngineVersion'
      security: []
      operationId: execVersion
      summary: get version information of the execution engine
      description: get version information of the execution engine
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}:
    get:
      tags:
        - entities
      description: List all entities of a given type
      parameters:
        - required: true
          name: workspaceNamespace
          schema:
            type: string
          description: Workspace Namespace
          in: path
        - in: path
          description: Workspace Name
          schema:
            type: string
          name: workspaceName
          required: true
        - name: entityType
          schema:
            type: string
          in: path
          description: Entity Type
          required: true
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
        '404':
          description: Workspace or entityType not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: list all entities of given type in a workspace
      operationId: list_entities
  /api/user/role/admin:
    get:
      operationId: isAdmin
      tags:
        - users
      summary: Query to see if you're an admin
      responses:
        '200':
          description: User is an admin
          content: {}
        '404':
          description: User is not an admin
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: gets the admin status of a user
  /api/workspaces/{workspaceNamespace}/{workspaceName}/sendChangeNotification:
    post:
      summary: Send Notification of data added to Workspace
      responses:
        '200':
          description: Success
          content: {}
      operationId: sendChangeNotification
      parameters:
        - schema:
            type: string
          required: true
          name: workspaceNamespace
          in: path
          description: workspace namespace
        - description: workspace name
          required: true
          schema:
            type: string
          in: path
          name: workspaceName
      tags:
        - workspaces
  /api/workspaces/{workspaceNamespace}/{workspaceName}/checkIamActionWithLock/{samActionName}:
    get:
      parameters:
        - schema:
            type: string
          name: workspaceNamespace
          required: true
          in: path
          description: Workspace Namespace
        - in: path
          schema:
            type: string
          description: Workspace Name
          required: true
          name: workspaceName
        - name: samActionName
          in: path
          description: Sam action
          required: true
          schema:
            type: string
      description: Check to see if the user has the given action on a workspace in
        Sam. Takes into account if the workspace is locked too.
      summary: Check IAM action with lock
      tags:
        - workspaces
      responses:
        '204':
          description: User can perform the given action on the workspace
          content: {}
        '403':
          description: User may not perform the given action on the workspace (including
            if it doesn't exist)
          content: {}
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      operationId: checkIamActionWithLock
  /api/workspaces/{workspaceNamespace}/{workspaceName}/submissions:
    get:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubmissionListResponse'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      description: List all submissions run in this workspace
      tags:
        - submissions
      parameters:
        - required: true
          description: Workspace Namespace
          schema:
            type: string
          name: workspaceNamespace
          in: path
        - in: path
          required: true
          name: workspaceName
          schema:
            type: string
          description: Workspace Name
      summary: List all submissions
      operationId: listSubmissions
    post:
      operationId: createSubmission
      responses:
        '502':
          description: Trouble talking to Agora
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionReport'
        '404':
          description: Workspace, Method Configuration or Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '400':
          description: Expression evaluation failed or entities are not of type required
            by method config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - submissions
      description: Submit a new job
      summary: Create submission
      x-codegen-request-body-name: submission
      requestBody:
        description: Description of a submission.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmissionRequest'
        required: true
      parameters:
        - description: Workspace Namespace
          in: path
          required: true
          schema:
            type: string
          name: workspaceNamespace
        - name: workspaceName
          in: path
          description: Workspace Name
          required: true
          schema:
            type: string
  /api/workspaces/{workspaceNamespace}/{workspaceName}/bucketUsage:
    get:
      summary: Get bucket usage
      parameters:
        - name: workspaceNamespace
          required: true
          in: path
          description: Workspace Namespace
          schema:
            type: string
        - schema:
            type: string
          name: workspaceName
          in: path
          required: true
          description: Workspace Name
      description: Get the storage bucket usage
      tags:
        - workspaces
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketUsageResponse'
      operationId: getBucketUsage
  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/validate:
    get:
      tags:
        - methodconfigs
      operationId: validate_method_configuration
      description: Validate a method configuration
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedMethodConfiguration'
        '404':
          description: Workspace, Method Configuration, or Data Reference not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - description: Workspace Namespace
          name: workspaceNamespace
          in: path
          schema:
            type: string
          required: true
        - description: Workspace Name
          schema:
            type: string
          name: workspaceName
          in: path
          required: true
        - schema:
            type: string
          description: Method Configuration Namespace
          name: configNamespace
          in: path
          required: true
        - description: Method Configuration Name
          schema:
            type: string
          name: configName
          in: path
          required: true
      summary: get syntax validation information for a method configuration
  /api/user/refreshTokenDate:
    get:
      tags:
        - users
      description: get the date the refresh token last updated
      summary: Get refresh token date
      deprecated: true
      operationId: refreshTokenDate
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRefreshTokenDate'
        '400':
          description: Token for the user is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: There is no refresh token for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs:
    get:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MethodConfiguration'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      summary: List method configurations in a workspace
      description: "List method configurations in a workspace. By default, only Agora\
        \ method configs are returned. To return configs for all repos, specify `allRepos`\
        \ to be `true`.\n\n#### Expanded discussion on the methodRepoMethod field\n\
        \nThis endpoint returns method references to Agora in the format\n```\n\"\
        methodRepoMethod\": {\n  \"methodNamespace\": \"namespace\",\n  \"methodName\"\
        : \"name\",\n  \"methodVersion\": 1,\n  \"sourceRepo\": \"agora\",\n  \"methodUri\"\
        : \"agora://namespace/name/1\"\n}\n```\nand for Dockstore in the format\n\
        ```\n\"methodRepoMethod\": {\n  \"methodPath\": \"path\",\n  \"methodVersion\"\
        : \"version\",\n  \"sourceRepo\": \"agora\",\n  \"methodUri\": \"dockstore://path/version\"\
        \n}\n```\nIf you are only working with Agora methods, the fields `\"sourceRepo\"\
        ` and `\"methodUri\"` can be considered informational and do not need to be\
        \ round-tripped (see the corresponding `POST /api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs`\
        \ for more details).\n"
      tags:
        - methodconfigs
      operationId: list_method_configurations
      parameters:
        - required: true
          description: Workspace Namespace
          in: path
          name: workspaceNamespace
          schema:
            type: string
        - description: Workspace Name
          name: workspaceName
          in: path
          required: true
          schema:
            type: string
        - name: allRepos
          in: query
          description: Configs for all repos, not just Agora
          schema:
            type: boolean
            default: false
    post:
      parameters:
        - required: true
          schema:
            type: string
          in: path
          name: workspaceNamespace
          description: Workspace Namespace
        - name: workspaceName
          schema:
            type: string
          in: path
          required: true
          description: Workspace Name
      description: "Create method configurations.\n\n#### Expanded discussion on the\
        \ methodRepoMethod field\n\nTo create a method config for an Agora method,\
        \ `\"sourceRepo\": \"agora\"` is optional; the following is sufficient:\n\
        ```\n\"methodRepoMethod\": {\n  \"methodNamespace\": \"namespace\",\n  \"\
        methodName\": \"name\",\n  \"methodVersion\": 1\n}\n```\nTo create a method\
        \ config for a Dockstore method, `\"sourceRepo\": \"dockstore\"` is required:\n\
        ```\n\"methodRepoMethod\": {\n  \"sourceRepo\": \"dockstore\",\n  \"methodPath\"\
        : \"path\",\n  \"methodVersion\": \"version\"\n}\n```\nYou may also use the\
        \ URI on its own to create a config referencing any supported repo (currently\
        \ Agora and Dockstore):\n```\n\"methodRepoMethod\": {\n  \"methodUri\": \"\
        agora://namespace/name/1\"\n}\n```\n```\n\"methodRepoMethod\": {\n  \"methodUri\"\
        : \"dockstore://path/version\"\n}\n```\nThe system is specified to check for\
        \ a URI first before falling back to the legacy fields. Unsupported repos\
        \ will return a 400 Bad Request.\n"
      operationId: create_method_configuration
      requestBody:
        description: Method Configuration contents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MethodConfiguration'
        required: true
      tags:
        - methodconfigs
      summary: Create Method configuration in a workspace
      x-codegen-request-body-name: methodConfigJson
      responses:
        '409':
          description: MethodConfiguration already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Invalid attribute namespace(s) in outputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly created method configuration
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatedMethodConfiguration'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/acl:
    get:
      summary: Get workspace ACL
      operationId: getACL
      description: Get access control list for a workspace
      tags:
        - workspaces
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceACL'
        '403':
          description: Insufficient permissions to get workspace ACLs (must be owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      parameters:
        - in: path
          description: Workspace Namespace
          schema:
            type: string
          name: workspaceNamespace
          required: true
        - in: path
          name: workspaceName
          schema:
            type: string
          required: true
          description: Workspace Name
    patch:
      responses:
        '200':
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceACLUpdateResponseList'
        '400':
          description: Attempting to change access controls you can't (your own, or
            public-access group)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '403':
          description: Insufficient permissions to edit workspace ACLs (must be owner)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '404':
          description: Workspace, user or group not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: aclUpdates
      requestBody:
        description: Series of ACL updates for workspace
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WorkspaceACLUpdate'
        required: true
      operationId: updateACL
      summary: Update workspace ACL
      parameters:
        - description: Workspace Namespace
          required: true
          name: workspaceNamespace
          in: path
          schema:
            type: string
        - required: true
          in: path
          description: Workspace Name
          name: workspaceName
          schema:
            type: string
        - schema:
            type: boolean
            default: false
          description: true to invite unregistered users, false to ignore
          required: true
          name: inviteUsersNotFound
          in: query
      description: Edit access control list for a workspace
      tags:
        - workspaces
  /api/billing/{projectId}/members:
    get:
      summary: list members of billing project the caller owns
      description: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      parameters:
        - required: true
          description: Project ID
          name: projectId
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RawlsBillingProjectMember'
        '403':
          description: You must be a project owner to view the members of a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
        '500':
          description: Rawls Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReport'
      tags:
        - billing
servers:
  - url: /
components:
  schemas:
    ExecutionServiceCallLogs:
      type: object
      properties:
        stdout:
          type: string
          description: Google bucket location for standard output
        stderr:
          type: string
          description: Google bucket location for standard error
        backendLogs:
          type: object
          properties: {}
          description: Map[String,String]
      description: Execution service logs per call
    Submission:
      type: object
      properties:
        useCallCache:
          type: boolean
          description: Whether or not to read from cache for this submission
        externalEntityInfo:
          $ref: '#/components/schemas/ExternalEntityInfo'
        submitter:
          type: string
          description: user that created the submission
        methodConfigurationNamespace:
          type: string
          description: Method configuration namespace
        cost:
          type: number
          description: The compute cost of this submission
          format: float
        workflowFailureMode:
          type: string
          description: What happens after a task fails. Choose from ContinueWhilePossible
            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
            docs for more information.
          default: NoNewCalls
          enum:
            - NoNewCalls
            - ContinueWhilePossible
        deleteIntermediateOutputFiles:
          type: boolean
          description: Whether or not to delete intermediate output files when the
            workflow completes. See [Cromwell docs](https://cromwell.readthedocs.io/en/stable/wf_options/Google#google-pipelines-api-workflow-options)
            for more information.
        submissionEntity:
          $ref: '#/components/schemas/AttributeEntityReference'
        submissionId:
          type: string
          description: SubmissionRequest unique identifier
        workflows:
          type: array
          description: Status of Workflow(s)
          items:
            $ref: '#/components/schemas/Workflow'
        submissionDate:
          type: string
          description: SubmissionRequest date
          format: date-time
        methodConfigurationName:
          type: string
          description: Method configuration name
        status:
          $ref: '#/components/schemas/SubmissionStatus'
      description: ''
    UserRefreshTokenDate:
      type: object
      properties:
        refreshTokenUpdatedDate:
          type: string
          format: date-time
      description: date a refresh token was stored
    WorkspaceRequestClone:
      required:
        - attributes
        - name
        - namespace
      type: object
      properties:
        copyFilesWithPrefix:
          type: string
          description: Used for clone operations only; the prefix for files to copy
            between source and destination workspace buckets
        namespace:
          type: string
          description: The namespace (billing project) the workspace belongs to
        attributes:
          type: object
          properties: {}
        name:
          type: string
          description: The name of the workspace
        authorizationDomain:
          type: array
          description: The list of groups in the Authorization Domain (empty if no
            AD is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
        noWorkspaceOwner:
          type: boolean
          description: Optional, false if not specified. If true, the workspace is
            created with a Billing Project owner but no workspace owner. Requires
            being a Billing Project owner.
          default: false
      description: ''
    SyncReport:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SyncReportItem'
      description: report of members added or removed
    MethodConfigurationNamePair:
      required:
        - destination
        - source
      type: object
      properties:
        source:
          $ref: '#/components/schemas/MethodConfigurationName'
        destination:
          $ref: '#/components/schemas/MethodConfigurationName'
      description: ''
    RawlsBillingProjectStatus:
      required:
        - creationStatus
        - projectName
      type: object
      properties:
        projectName:
          type: string
          description: the name of the billing project
        creationStatus:
          type: string
          enum:
            - Creating
            - Ready
            - Error
      description: a billing project status
    DataRepoSnapshot:
      description: A raw data repo snapshot reference from workspace manager.
      type: object
      required:
        - instanceName
        - snapshot
      properties:
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string
    WorkspaceACLUpdate:
      required:
        - accessLevel
        - email
      type: object
      properties:
        email:
          type: string
          description: email address of the user or group whose permissions will be
            changed
        accessLevel:
          type: string
          description: The access level to grant to this user or group (OWNER, READER,
            WRITER, NO ACCESS)
        canShare:
          type: boolean
          description: Set to true if you want this user to be able to share the workspace
            with other users, only meaningful for readers and writers, default false
        canCompute:
          type: boolean
          description: Set to true if you want this user to be able to launch compute
            in this workspace, may not be true for readers, default false for reader,
            true otherwise
      description: ''
    WorkspaceBucketOptions:
      required:
        - requesterPays
      type: object
      properties:
        requesterPays:
          type: boolean
          description: Whether the bucket is requester pays
      description: Extra information about a GCS bucket attached to a workspace
    RemoveAttribute:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeName:
              type: string
              description: The name of attribute to remove
    SubmissionValidationInput:
      required:
        - expression
        - wdlName
      type: object
      properties:
        wdlName:
          type: string
          description: name of input
        expression:
          type: string
          description: expression for input
      description: method configuration input parameter, its name and the associated
        expression from the method config
    WorkspaceDetails:
      required:
        - bucketName
        - createdBy
        - createdDate
        - isLocked
        - lastModified
        - name
        - namespace
        - workspaceId
        - googleProject
        - workspaceVersion
      type: object
      properties:
        createdDate:
          type: string
          description: The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ
            format
          format: date-time
        authorizationDomain:
          type: array
          description: The list of groups in the Authorization Domain (empty if no
            AD is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
        isLocked:
          type: boolean
          description: Can the Workspace currently be modified?
        lastModified:
          type: string
          description: The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ
            format
          format: date-time
        namespace:
          type: string
          description: The namespace the workspace belongs to
        name:
          type: string
          description: The name of the workspace
        workspaceId:
          type: string
          description: A UUID associated with the workspace
        createdBy:
          type: string
          description: The user who created the workspace
        workspaceVersion:
          type: string
          description: internal use
        workflowCollectionName:
          type: string
          description: The name of the workflow collection associated with the workspace
        bucketName:
          type: string
          description: The name of the bucket associated with the workspace
        attributes:
          type: object
          properties: {}
          description: Map[String, Attribute]
        googleProject:
          type: string
          description: the google project used by the workspace for compute and storage
      description: ''
    CreateAttributeValueList:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeName:
              type: string
              description: The name of the empty attribute value-list to create. This
                is a non-destructive operation.
    NotificationType:
      required:
        - description
        - notificationKey
      type: object
      properties:
        notificationKey:
          type: string
        description:
          type: string
      description: key and description of a notification
    EntityName:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the entity
      description: ''
    EntityQueryResultMetadata:
      required:
        - filteredCount
        - filteredPageCount
        - unfilteredCount
      type: object
      properties:
        unfilteredCount:
          type: number
          description: count of results before filtering
        filteredCount:
          type: number
          description: count of results after filtering
        filteredPageCount:
          type: number
          description: count of pages after filtering; honors pageSize parameter
      description: ''
    MethodRepoMethod:
      required:
        - methodName
        - methodNamespace
        - methodVersion
      type: object
      properties:
        methodVersion:
          type: integer
          description: The integer method version in Agora (or a string method version
            for Dockstore)
        sourceRepo:
          type: string
          description: The method's repository, currently one of "agora" or "dockstore"
        methodPath:
          type: string
          description: The path of the method in Dockstore
        methodName:
          type: string
          description: The name of the method in Agora
        methodUri:
          type: string
          description: URI that specifies the method's repository and captures all
            the information necessary to identify the method within its repository
            (e.g. agora://namespace/name/1, dockstore://path/version)
        methodNamespace:
          type: string
          description: The namespace of the method in Agora
      description: ''
    SubmissionValidationReport:
      required:
        - header
        - invalidEntities
        - request
        - validEntities
      type: object
      properties:
        header:
          $ref: '#/components/schemas/SubmissionValidationHeader'
        validEntities:
          type: array
          description: runnable entities
          items:
            $ref: '#/components/schemas/SubmissionValidationEntityInputs'
        invalidEntities:
          type: array
          description: non-runnable entities
          items:
            $ref: '#/components/schemas/SubmissionValidationEntityInputs'
        request:
          $ref: '#/components/schemas/SubmissionRequest'
      description: the results of parsing each input for each entity
    SubmissionValidationHeader:
      required:
        - entityType
        - inputExpressions
      type: object
      properties:
        entityType:
          type: string
          description: type of entity
        inputExpressions:
          type: array
          description: input descriptions
          items:
            $ref: '#/components/schemas/SubmissionValidationInput'
      description: common values for all the entities -- the entity type and the input
        descriptions
    WorkflowOutputs:
      type: object
      properties:
        tasks:
          type: array
          description: Map from tasks to output/log pairs
          items:
            $ref: '#/components/schemas/TaskOutput'
        workflowId:
          type: string
          description: The id of this workflow
      description: Outputs and logs from all tasks in a workflow
    ValidatedMethodConfiguration:
      required:
        - extraInputs
        - invalidInputs
        - invalidOutputs
        - methodConfiguration
        - missingInputs
        - validInputs
        - validOutputs
      type: object
      properties:
        validOutputs:
          type: array
          items:
            type: string
        missingInputs:
          type: array
          items:
            type: string
        extraInputs:
          type: array
          items:
            type: string
        invalidOutputs:
          type: object
          properties: {}
        invalidInputs:
          type: object
          properties: {}
        methodConfiguration:
          $ref: '#/components/schemas/MethodConfiguration'
        validInputs:
          type: array
          items:
            type: string
      description: Information about the validity of a method configuration's expressions
        relative to the method itself
    MethodRepoConfigurationImport:
      required:
        - destination
        - methodRepoName
        - methodRepoNamespace
        - methodRepoSnapshotId
      type: object
      properties:
        methodRepoNamespace:
          type: string
          description: Method Repository Namespace
        methodRepoName:
          type: string
          description: Method Repository Name
        methodRepoSnapshotId:
          type: integer
          description: Method Repository Snapshot ID
        destination:
          $ref: '#/components/schemas/MethodConfigurationName'
      description: ''
    NamedDataRepoSnapshot:
      type: object
      required:
        - snapshotId
        - name
      properties:
        snapshotId:
          type: string
          description: The ID of the snapshot in Terra Data Repo
        name:
          type: string
          description: The name of the snapshot
        description:
          type: string
          description: A description for the snapshot
          default: ''
      description: A Data Repo snapshot
    MethodInputsOutputs:
      type: object
      properties:
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/MethodInput'
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/MethodOutput'
      description: description of a method's inputs and outputs
    WorkspaceListResponse:
      type: object
      properties:
        accessLevel:
          $ref: '#/components/schemas/WorkspaceAccessLevel'
        public:
          type: boolean
        workspace:
          $ref: '#/components/schemas/WorkspaceDetails'
        workspaceSubmissionStats:
          $ref: '#/components/schemas/WorkspaceSubmissionStats'
      description: ''
    EntityHardConflict:
      required:
        - entityName
        - entityType
      type: object
      properties:
        entityType:
          type: string
          description: the type of the entity
        entityName:
          type: string
          description: the name of the entity
      description: ''
    ApplicationVersion:
      type: object
      properties:
        gitHash:
          type: string
        buildNumber:
          type: string
        version:
          type: string
      description: version of the application
    AttributeEntityReference:
      required:
        - entityName
        - entityType
      type: object
      properties:
        entityType:
          type: string
          description: The type of the entity
        entityName:
          type: string
          description: The name of the entity
      description: ''
    WorkspaceRequest:
      required:
        - attributes
        - name
        - namespace
      type: object
      properties:
        authorizationDomain:
          type: array
          description: The list of groups in the Authorization Domain (empty if no
            AD is set)
          items:
            $ref: '#/components/schemas/ManagedGroupRef'
        name:
          type: string
          description: The name of the workspace
        namespace:
          type: string
          description: The namespace (billing project) the workspace belongs to
        bucketLocation:
          type: string
          required: false
          description: Region (NOT multi-region) in which bucket attached to the workspace
            should be created. If not provided, the bucket will be created in the
            'US' multi-region.
        attributes:
          type: object
          properties: {}
        noWorkspaceOwner:
          type: boolean
          description: Optional, false if not specified. If true, the workspace is
            created with a Billing Project owner but no workspace owner. Requires
            being a Billing Project owner.
          default: false
      description: ''
    EntityCopyResponse:
      required:
        - entitiesCopied
        - hardConflicts
        - softConflicts
      type: object
      properties:
        entitiesCopied:
          type: array
          description: the entities that were successfully copied into the workspace
          items:
            $ref: '#/components/schemas/AttributeEntityReference'
        hardConflicts:
          type: array
          description: these entities already exist in your workspace
          items:
            $ref: '#/components/schemas/EntityHardConflict'
        softConflicts:
          type: array
          description: the conflicts within your entity subtrees. note that this will
            be empty if there are hard conflicts
          items:
            $ref: '#/components/schemas/EntitySoftConflict'
      description: ''
    ManagedGroupAccessInstructions:
      required:
        - groupName
        - instructions
      type: object
      properties:
        groupName:
          type: string
          description: The name of the Group with instructions
        instructions:
          type: string
          description: The instructions for applying to the Group
      description: ''
    ActiveSubmission:
      type: object
      properties:
        workspaceNamespace:
          type: string
          description: workspaceNamespace of the submission
        workspaceName:
          type: string
          description: workspaceName of the submission
        submission:
          $ref: '#/components/schemas/Submission'
      description: a submission that's still a going concern
    RawlsBillingProjectTransfer:
      required:
        - bucket
        - newOwnerEmail
        - newOwnerToken
        - project
      type: object
      properties:
        project:
          type: string
          description: the name of the new google project
        bucket:
          type: string
          description: generated Cromwell auth bucket, minus the gs:// prefix
        newOwnerEmail:
          type: string
          description: Email of the new billing project owner
        newOwnerToken:
          type: string
          description: OAuth2AccessToken of the new billing project owner
      description: admin request to transfer a pre-created billing project to a new
        owner
    BillingAccount:
      required:
        - accountName
        - displayName
        - firecloudHasAccess
      type: object
      properties:
        accountName:
          type: string
          description: name of billing account
        firecloudHasAccess:
          type: boolean
          description: whether the Firecloud service has been given access to this
            billing account
        displayName:
          type: string
          description: display name of billing account
      description: Details for a single billing account
    Entity:
      required:
        - attributes
        - entityType
        - name
      type: object
      properties:
        name:
          type: string
          description: The name of the entity
        entityType:
          type: string
          description: The type of the entity
        attributes:
          type: object
          properties: {}
          description: Map[String,Attribute]
      description: ''
    ManagedGroupRef:
      required:
        - membersGroupName
      type: object
      properties:
        membersGroupName:
          type: string
      description: a reference to a group that can be managed by users
    EntityQueryResponse:
      required:
        - parameters
        - resultMetadata
        - results
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/EntityQuery'
        resultMetadata:
          $ref: '#/components/schemas/EntityQueryResultMetadata'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
      description: ''
    MethodConfiguration:
      required:
        - inputs
        - methodRepoMethod
        - name
        - namespace
      type: object
      properties:
        inputs:
          type: object
          properties: {}
        name:
          type: string
          description: The name of the method configuration
        methodConfigVersion:
          type: integer
          description: Version number, incremented on edit
        namespace:
          type: string
          description: This method configuration's namespace
        deleted:
          type: boolean
          description: Is this config marked as deleted?
        methodRepoMethod:
          $ref: '#/components/schemas/MethodRepoMethod'
        dataReferenceName:
          type: string
          description: the name of the data reference within this workspace to be
            used to derive input values
        outputs:
          type: object
          properties: {}
        rootEntityType:
          type: string
          description: The root entity type that the method will be running on. Optional
            if this method config doesn't run on an entity (i.e. uses only workspace
            attributes and literal inputs).
      description: ''
    SubsystemStatus:
      type: object
      properties:
        ok:
          type: boolean
          description: whether this system needs attention
        messages:
          type: array
          items:
            type: string
      description: status of a subsystem Rawls depends on
    WorkspaceCatalog:
      required:
        - catalog
        - email
      type: object
      properties:
        email:
          type: string
          description: email of the user or group whose permissions will be changed
        catalog:
          type: boolean
          description: Set to true if you want this user to be able to perform library
            related operations on the workspace
      description: ''
    WorkspaceName:
      required:
        - name
        - namespace
      type: object
      properties:
        namespace:
          type: string
          description: The namespace (billing project) the workspace belongs to
        name:
          type: string
          description: The name of the workspace
      description: ''
    SubmissionReport:
      required:
        - header
        - request
        - status
        - submissionDate
        - submissionId
        - submitter
        - workflows
      type: object
      properties:
        request:
          $ref: '#/components/schemas/SubmissionRequest'
        header:
          $ref: '#/components/schemas/SubmissionValidationHeader'
        status:
          type: string
          description: status
        submissionDate:
          type: string
          description: SubmissionRequest date
          format: date-time
        workflows:
          type: array
          description: workflows initiated by this submission
          items:
            $ref: '#/components/schemas/SubmissionValidationEntityInputs'
        submissionId:
          type: string
          description: SubmissionRequest unique identifier
        submitter:
          type: string
          description: user that created the submission
      description: information on a submission
    ErrorReport:
      required:
        - causes
        - message
        - source
        - stackTrace
      type: object
      properties:
        causes:
          type: array
          description: errors triggering this one
          items:
            $ref: '#/components/schemas/ErrorReport'
        exceptionClass:
          type: string
          description: class of exception thrown
        statusCode:
          type: integer
          description: HTTP status code
        source:
          type: string
          description: service causing error
        stackTrace:
          type: array
          description: stack trace
          items:
            $ref: '#/components/schemas/StackTraceElement'
        message:
          type: string
          description: what went wrong
      description: ''
    WorkflowQueueStatusResponse:
      required:
        - estimatedQueueTimeMS
        - workflowCountsByStatus
        - workflowsBeforeNextUserWorkflow
      type: object
      properties:
        estimatedQueueTimeMS:
          type: integer
          description: estimated milliseconds until the current queue is submitted
        workflowsBeforeNextUserWorkflow:
          type: integer
          description: the number of workflows in the queue ahead of the user's first
            workflow
        workflowCountsByStatus:
          type: object
          properties: {}
          description: Map[String,Int]
      description: Information about the status of workflows and the workflow queue
    SubmissionListResponse:
      type: object
      properties:
        submissionId:
          type: string
          description: Submission unique identifier
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        submissionEntity:
          $ref: '#/components/schemas/AttributeEntityReference'
        methodConfigurationName:
          type: string
          description: Method configuration name
        workflowStatuses:
          type: object
          properties: {}
          description: a count of the workflow statuses in the submission as a Map[String,Int]
        submitter:
          type: string
          description: user that created the submission
        externalEntityInfo:
          $ref: '#/components/schemas/ExternalEntityInfo'
        workflowFailureMode:
          type: string
          description: What happens after a task fails. Choose from ContinueWhilePossible
            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
            docs for more information.
          default: NoNewCalls
          enum:
            - NoNewCalls
            - ContinueWhilePossible
        submissionDate:
          type: string
          description: Submission date
          format: date-time
        methodConfigurationNamespace:
          type: string
          description: Method configuration namespace
      description: An abbreviated Submission, without workflow information, good for
        listings
    SystemStatus:
      required:
        - ok
        - systems
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
          example: false
        systems:
          type: object
          properties: {}
          description: Map[String, SubsystemStatus]
          example:
            GoogleBilling:
              ok: false
              messages:
                - Google Billing is misbehaving!
            Database:
              ok: true
            Agora:
              ok: true
            GoogleGenomics:
              ok: true
            Cromwell:
              ok: true
            GoogleGroups:
              ok: true
            GoogleBuckets:
              ok: true
            GooglePubSub:
              ok: true
      description: status of each system Rawls depends on
    CreateRawlsBillingProjectFullRequest:
      required:
        - billingAccount
        - projectName
      type: object
      properties:
        billingAccount:
          type: string
          description: the id of the billing account to use, must start with 'billingAccounts/'
        privateIpGoogleAccess:
          type: boolean
          description: Optional, false if not specified. If true, it configures the
            VPC network to only allow access to GCP APIs that are protected by the
            project's service perimeter and routes all allowed API traffic through
            a narrow IP range. Requires highSecurityNetwork = true.
        enableFlowLogs:
          type: boolean
          description: Optional, false if not specified. If true, enable flow logs
            within the high security network. Requires highSecurityNetwork = true.
        servicePerimeter:
          type: string
          description: The fully qualified name of the GCP service perimeter to put
            this project into in the form accessPolicies/[POLICY NUMBER]/servicePerimeters/[NAME].
            Caller must have the add_project action for this service perimeter in
            Sam.
        projectName:
          type: string
          description: the name of the project to create
        highSecurityNetwork:
          type: boolean
          description: Optional, false if not specified. If true, spin up all compute
            in a VPC network.
      description: ''
    ExecutionEngineVersion:
      type: object
      properties:
        cromwell:
          type: string
      description: version of the execution engine
    SyncReportItem:
      type: object
      properties:
        operation:
          type: string
        email:
          type: string
        errorReport:
          $ref: '#/components/schemas/ErrorReport'
      description: results of an attempt to synchronize a member
    SubmissionRequest:
      required:
        - methodConfigurationName
        - methodConfigurationNamespace
      type: object
      properties:
        useReferenceDisks:
          type: boolean
          description: Whether or not to use pre-built disks for common genome references
        deleteIntermediateOutputFiles:
          type: boolean
          description: Whether or not to delete intermediate output files when the
            workflow completes. See [Cromwell docs](https://cromwell.readthedocs.io/en/stable/wf_options/Google#google-pipelines-api-workflow-options)
            for more information.
        useCallCache:
          type: boolean
          description: Whether or not to read from cache for this submission
        workflowFailureMode:
          type: string
          description: What happens after a task fails. Choose from ContinueWhilePossible
            and NoNewCalls. Defaults to NoNewCalls if not specified. See Cromwell
            docs for more information.
          default: NoNewCalls
          enum:
            - NoNewCalls
            - ContinueWhilePossible
        entityType:
          type: string
          description: Type of root entity for expression. Optional if the method
            configuration has no root entity.
        methodConfigurationName:
          type: string
          description: Name of the method configuration to execute.
        methodConfigurationNamespace:
          type: string
          description: Namespace of the method configuration to execute.
        entityName:
          type: string
          description: Name of root entity for expression. Optional if the method
            configuration has no root entity.
        expression:
          type: string
          description: Expression that resolves to one or more entities matching the
            entity type in the method configuration. Optional if the method configuration
            has no root entity.
      description: If the referenced method configuration takes no root entity, do
        not define `entityType`, `entityName` and `expression`.
    UserRefreshToken:
      type: object
      properties:
        refreshToken:
          type: string
      description: payload to put a refresh token
    TaskOutput:
      type: object
      properties:
        logs:
          type: array
          description: logs for this task
          items:
            $ref: '#/components/schemas/ExecutionServiceCallLogs'
        outputs:
          type: object
          properties: {}
          description: Map[String,String]
      description: Outputs from a single task in a workflow
    WorkflowCost:
      type: object
      properties:
        cost:
          type: number
          description: Workflow cost
        workflowId:
          type: string
          description: The id of this workflow
      description: The cost of a workflow, if available
    WorkspaceResponse:
      type: object
      properties:
        bucketOptions:
          $ref: '#/components/schemas/WorkspaceBucketOptions'
        workspaceSubmissionStats:
          $ref: '#/components/schemas/WorkspaceSubmissionStats'
        accessLevel:
          $ref: '#/components/schemas/WorkspaceAccessLevel'
        workspace:
          $ref: '#/components/schemas/WorkspaceDetails'
        owners:
          type: array
          description: 'Owners of this workspace. This API only lists owners; use
            the get-workspace-ACL API to get the full list of all users at all permission
            levels.

            '
          items:
            type: string
        canCompute:
          type: boolean
        canShare:
          type: boolean
        catalog:
          type: boolean
      description: ''
    EntityUpdateDefinition:
      required:
        - entityType
        - name
        - operations
      type: object
      properties:
        name:
          type: string
          description: The name of the entity
        entityType:
          type: string
          description: The type of the entity
        operations:
          $ref: '#/components/schemas/AttributeUpdateOperationArray'
      description: ''
    EntityTypeMetadata:
      required:
        - attributeNames
        - count
      type: object
      properties:
        count:
          type: integer
          description: The number of entities of this type
        idName:
          type: string
          description: The name if the id field for the entity
        attributeNames:
          type: array
          description: A list of all attribute names used
          items:
            type: string
      description: ''
    AgoraEntity:
      type: object
      properties:
        payload:
          type: string
        url:
          type: string
        name:
          type: string
        entityType:
          type: string
        documentation:
          type: string
        createDate:
          type: string
        owner:
          type: string
        snapshotId:
          type: string
        namespace:
          type: string
        synopsis:
          type: string
      description: response from Method Repo
    AttributeUpdateOperation:
      required:
        - op
      type: object
      properties:
        op:
          type: string
          description: The operation to perform on the attribute
          enum:
            - AddUpdateAttribute
            - RemoveAttribute
            - AddListMember
            - RemoveListMember
            - CreateAttributeEntityReferenceList
            - CreateAttributeValueList
      discriminator:
        propertyName: op
    Workflow:
      type: object
      properties:
        cost:
          type: number
          description: The run cost of this workflow
          format: float
        messages:
          type: array
          description: List of messages about this workflow
          items:
            type: string
        inputResolutions:
          type: array
          description: The evaluation of each input
          items:
            $ref: '#/components/schemas/SubmissionValidationValue'
        workflowId:
          type: string
          description: Workflow unique identifier
        status:
          $ref: '#/components/schemas/WorkflowStatus'
        statusLastChangedDate:
          type: string
          description: Status last-changed date
          format: date-time
        workflowEntity:
          $ref: '#/components/schemas/AttributeEntityReference'
      description: ''
    WorkspaceACL:
      required:
        - acl
      type: object
      properties:
        acl:
          type: object
          properties: {}
          description: Map[String,WorkspaceAccessEntry]
      description: ''
    WorkspaceCatalogResponse:
      required:
        - catalog
        - subjectId
      type: object
      properties:
        subjectId:
          type: string
          description: subject Id of the user or group whose permissions will be changed
        catalog:
          type: boolean
          description: Set to true if you want this user to be able to perform library
            related operations on the workspace
      description: ''
    AddListMember:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeListName:
              type: string
              description: The name of the attribute list
            newMember:
              type: string
              description: The attribute to add to the list
    WorkspaceTag:
      required:
        - count
        - tag
      type: object
      properties:
        tag:
          type: string
          description: tag string
        count:
          type: number
          description: number of usages of the tag across FireCloud
      description: tag with count
    WorkspaceAccessLevel:
      type: string
      description: The level of access a user or group has on a Workspace. NoAccess,
        Read, Write, Owner, ProjectOwner
      enum:
        - PROJECT_OWNER
        - OWNER
        - WRITER
        - READER
        - NO ACCESS
    AttributeUpdateOperationArray:
      type: array
      description: ''
      example: "[\n  {\n    \"op\": \"AddUpdateAttribute\",\n    \"attributeName\"\
        : \"name of attribute to add/update\",\n    \"addUpdateAttribute\": \"value\
        \ to add/update\"\n  },\n  {\n    \"op\": \"RemoveAttribute\",\n    \"attributeName\"\
        : \"name of attribute to remove\"\n  },\n  {\n    \"op\": \"AddListMember\"\
        ,\n    \"attributeListName\": \"name of list attribute\",\n    \"newMember\"\
        : \"value to add to list\"\n  },\n  {\n    \"op\": \"RemoveListMember\",\n\
        \    \"attributeListName\": \"name of list attribute\",\n    \"removeMember\"\
        : \"value to remove from list\"\n  },\n  {\n    \"op\": \"CreateAttributeEntityReferenceList\"\
        ,\n    \"attributeListName\": \"name of entity-reference list attribute to\
        \ create\"\n  },\n  {\n    \"op\": \"CreateAttributeValueList\",\n    \"attributeName\"\
        : \"name of value-list attribute to create\"\n  }\n]\n"
      items:
        $ref: '#/components/schemas/AttributeUpdateOperation'
    RawlsGroupRef:
      type: object
      properties:
        groupName:
          type: string
          description: ''
      description: a reference to a group
    WorkflowQueueStatusByUserResponse:
      required:
        - maxActiveWorkflowsPerUser
        - maxActiveWorkflowsTotal
        - statuses
        - users
      type: object
      properties:
        statuses:
          type: object
          properties: {}
          description: Map[String, Int]
        users:
          type: object
          properties: {}
          description: Map[String, Map[String, Int]]
        maxActiveWorkflowsTotal:
          type: integer
          description: maximum number of active workflows allowed in total
        maxActiveWorkflowsPerUser:
          type: integer
          description: maximum number of active workflows allower per user
      description: Information about the status of workflows and the workflow queue,
        broken out by user
    EntityCopyDefinition:
      required:
        - destinationWorkspace
        - entityNames
        - entityType
        - sourceWorkspace
      type: object
      properties:
        sourceWorkspace:
          $ref: '#/components/schemas/WorkspaceName'
        destinationWorkspace:
          $ref: '#/components/schemas/WorkspaceName'
        entityType:
          type: string
          description: Type of top level entities to copy
        entityNames:
          type: array
          description: Names of entities to copy
          items:
            type: string
      description: ''
    WorkspaceSubmissionStats:
      required:
        - runningSubmissionsCount
      type: object
      properties:
        lastSuccessDate:
          type: string
          description: The date of the last successful submission
          format: date-time
        lastFailureDate:
          type: string
          description: The date of the last failed submission
          format: date-time
        runningSubmissionsCount:
          type: integer
          description: Count of all the running submissions
      description: Statistics about submissions in a workspace
    MethodRepoConfigurationExport:
      required:
        - methodRepoName
        - methodRepoNamespace
        - source
      type: object
      properties:
        methodRepoNamespace:
          type: string
          description: Method Repository Namespace
        methodRepoName:
          type: string
          description: Method Repository Name
        source:
          $ref: '#/components/schemas/MethodConfigurationName'
      description: ''
    RawlsBillingProjectMember:
      required:
        - email
        - role
      type: object
      properties:
        email:
          type: string
          description: the email of the user
        role:
          type: string
          description: the role of the user in the project
      description: an element of a list of project users and their role
    Attribute:
      type: object
      properties:
        value:
          type: string
          description: ''
      description: ''
    BucketUsageResponse:
      required:
        - usageInBytes
      type: object
      properties:
        usageInBytes:
          type: integer
          description: The current storage bucket usage in bytes
      description: ''
    MethodInput:
      type: object
      properties:
        name:
          type: string
        inputType:
          type: string
        optional:
          type: boolean
      description: description of a method input
    DataRepoSnapshotReferenceList:
      type: object
      required:
        - resources
      properties:
        resources:
          type: array
          description: A list of Data Reference definitions from Workspace Manager
          items:
            $ref: '#/components/schemas/DataRepoSnapshotReference'
      description: A list of DataRepoSnapshotReferences
    AddUpdateAttribute:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeName:
              type: string
              description: Name of attribute to add/update
            addUpdateAttribute:
              type: string
              description: Value to add/update. Accepts strings, numbers, booleans.
    WorkspaceCatalogUpdateResponseList:
      required:
        - emailsNotFound
        - usersUpdated
      type: object
      properties:
        usersUpdated:
          type: array
          description: the users or groups who were updated
          items:
            $ref: '#/components/schemas/WorkspaceCatalogResponse'
        emailsNotFound:
          type: array
          description: the emails of users or groups who were not found
          items:
            type: string
      description: ''
    SubmissionValidationValue:
      required:
        - inputName
      type: object
      properties:
        value:
          type: string
          description: the value of the input expression for the specified entity
        error:
          type: string
          description: parsing error(s)
        inputName:
          type: string
          description: name of input
      description: result of an expression parse for one of the inputs
    CallMetadata:
      type: object
      properties:
        shardIndex:
          type: integer
          description: call index within a scatter block, as reported by execution
            service
        inputs:
          type: object
          properties: {}
          description: map from input names onto resolved values
        returnCode:
          type: integer
          description: result code
        backendLogs:
          type: object
          properties: {}
          description: map of log files from backend
        executionStatus:
          type: string
          description: status of call
        start:
          type: string
          description: starting time of call
          format: date-time
        backendStatus:
          type: string
          description: status of the backend
        backend:
          type: string
          description: type of backend executing the call
        executionEvents:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionEvent'
        jobId:
          type: string
          description: unique ID of job
        stdout:
          type: string
          description: location of stdout
        stderr:
          type: string
          description: location of stderr
        outputs:
          type: object
          properties: {}
          description: map from output names to local files
        end:
          type: string
          description: ending time of call
          format: date-time
      description: Stuff you need to know about calls
    WorkflowStatus:
      type: string
      description: workflow status
      enum:
        - Queued
        - Launching
        - Submitted
        - Running
        - Failed
        - Succeeded
        - Aborting
        - Aborted
        - Unknown
    ExecutionEvent:
      required:
        - description
        - startTime
      type: object
      properties:
        description:
          type: string
          description: Description of the event
        startTime:
          type: string
          description: When the event started
          format: date-time
        endTime:
          type: string
          description: When the event finished
          format: date-time
      description: ''
    SubmissionStatus:
      type: string
      description: submission status
      enum:
        - Accepted
        - Evaluating
        - Submitting
        - Submitted
        - Aborting
        - Aborted
        - Done
    EntitySoftConflict:
      required:
        - conflicts
        - entityName
        - entityType
      type: object
      properties:
        entityType:
          type: string
          description: the type of the entity
        entityName:
          type: string
          description: the name of the entity
        conflicts:
          type: array
          description: the next entity in the path to the conflict
          items:
            $ref: '#/components/schemas/EntitySoftConflict'
      description: ''
    SubmissionValidationEntityInputs:
      required:
        - entityName
        - inputResolutions
      type: object
      properties:
        entityName:
          type: string
          description: name of entity. May be empty if this submission doesn't run
            on an entity
        inputResolutions:
          type: array
          description: input resolution
          items:
            $ref: '#/components/schemas/SubmissionValidationValue'
      description: the results of parsing each of the inputs for one entity
    WorkspaceAccessEntry:
      required:
        - accessLevel
        - canCompute
        - canShare
        - pending
      type: object
      properties:
        accessLevel:
          type: string
          description: The access level granted to this user or group (OWNER, READER,
            WRITER, NO ACCESS)
        pending:
          type: boolean
          description: The status of the users access
        canShare:
          type: boolean
          description: True if the user can share the workspace with others, false
            otherwise
        canCompute:
          type: boolean
          description: True if the user can launch compute in this workspace, false
            otherwise
      description: ''
    MethodConfigurationName:
      required:
        - name
        - namespace
        - workspaceName
      type: object
      properties:
        name:
          type: string
          description: The name of the method configuration
        namespace:
          type: string
          description: This method configuration's owning namespace
        workspaceName:
          $ref: '#/components/schemas/WorkspaceName'
      description: ''
    UpdateDataReferenceRequestBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    DataRepoSnapshotReference:
      type: object
      required:
        - referenceId
        - name
        - description
        - workspaceId
        - referenceType
        - reference
        - cloningInstructions
      properties:
        description:
          type: string
        referenceType:
          type: string
        workspaceId:
          type: string
        name:
          type: string
        reference:
          $ref: '#/components/schemas/DataRepoSnapshot'
        cloningInstructions:
          type: string
        referenceId:
          type: string
      description: A Data Reference definition from Workspace Manager
    EntityQuery:
      required:
        - page
        - pageSize
        - sortDirection
        - sortField
      type: object
      properties:
        sortField:
          type: string
          description: field to sort by
        sortDirection:
          type: string
          description: asc or desc
        page:
          type: number
          description: page number, 1-indexed positive integer
        filterTerms:
          type: string
          description: terms to filter results by
        pageSize:
          type: number
          description: count of items per page, positive integer
      description: ''
    StackTraceElement:
      required:
        - className
        - fileName
        - lineNumber
        - methodName
      type: object
      properties:
        className:
          type: string
          description: class name
        methodName:
          type: string
          description: method name
        fileName:
          type: string
          description: source file name
        lineNumber:
          type: integer
          description: line number
      description: ''
    RawlsBillingProjectMembership:
      required:
        - projectName
        - role
        - status
      type: object
      properties:
        projectName:
          type: string
          description: the name of the project to create
        role:
          type: string
          description: the role of the current user in the project
        status:
          type: string
          enum:
            - Creating
            - Ready
            - Error
        message:
          type: string
          description: informational message about the project
      description: an element of a list of projects and related role for a user
    RemoveListMember:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeListName:
              type: string
              description: The name of the attribute list
            removeMember:
              type: string
              description: The attribute to remove from the list
    CreateAttributeEntityReferenceList:
      allOf:
        - $ref: '#/components/schemas/AttributeUpdateOperation'
        - type: object
          properties:
            attributeListName:
              type: string
              description: The name of the empty attribute entity-reference list to
                create. This is a non-destructive operation.
    ExternalEntityInfo:
      type: object
      properties:
        dataStoreId:
          type: string
          description: external datastore id for the collection of data
        rootEntityType:
          type: string
          description: type of data within the external datastore
    MethodOutput:
      type: object
      properties:
        name:
          type: string
        outputType:
          type: string
      description: description of a method output
    RawlsBillingProjectResponse:
      required:
        - projectName
        - invalidBillingAccount
        - roles
      type: object
      properties:
        projectName:
          type: string
          description: the name of the project
        billingAccount:
          type: string
          description: the billing account to use in google projects
        roles:
          type: array
          items:
            type: string
          description: the roles the caller has on the project
        servicePerimeter:
          type: string
          description: the name of the service permeters for google project
        invalidBillingAccount:
          type: boolean
          description: whether or not the billing account is usable by Terra
    RawlsGroupShort:
      type: object
      properties:
        groupName:
          type: string
          description: ''
        groupEmail:
          type: string
          description: ''
      description: group information without memberships
    WorkspaceACLUpdateResponseList:
      required:
        - invitesSent
        - invitesUpdated
        - usersNotFound
        - usersUpdated
      type: object
      properties:
        usersUpdated:
          type: array
          description: the users or groups who were updated
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
        invitesSent:
          type: array
          description: the list of invites that were sent
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
        invitesUpdated:
          type: array
          description: the list of invites that were updated
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
        usersNotFound:
          type: array
          description: the users or groups who were not found
          items:
            $ref: '#/components/schemas/WorkspaceACLUpdate'
      description: ''
  parameters:
    snapshotIdPathParam:
      in: path
      schema:
        type: string
      description: The snapshot's referenceId
      required: true
      name: snapshotId
    entityTypePathParam:
      schema:
        type: string
      in: path
      description: Entity Type
      name: entityType
      required: true
    workspaceNamespacePathParam:
      description: The workspace namespace
      name: workspaceNamespace
      in: path
      required: true
      schema:
        type: string
    billingProjectQueryParam:
      name: billingProject
      in: query
      description: Billing project to use for queries to the data reference
      schema:
        type: string
    entityNamePathParam:
      in: path
      schema:
        type: string
      name: entityName
      description: Entity Name
      required: true
    workspaceNamePathParam:
      description: The workspace name
      schema:
        type: string
      in: path
      required: true
      name: workspaceName
    dataReferenceQueryParam:
      name: dataReference
      in: query
      description: Data reference name to query for entity metadata
      schema:
        type: string
  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
            https://www.googleapis.com/auth/cloud-billing: cloud billing authorization
info:
  description: Rawls API
  title: Rawls
  version: 1.0.0
  license:
    name: BSD
    url: http://opensource.org/licenses/BSD-3-Clause
  termsOfService: http://www.github.com/broadinstitute/rawls
tags:
  - name: admin
  - name: billing
  - name: billing_v2
  - name: entities
  - name: methodconfigs
  - name: notifications
  - name: servicePerimeters
  - name: snapshots
  - name: status
  - name: submissions
  - name: users
  - name: version
  - name: workflows
  - name: workspaces
