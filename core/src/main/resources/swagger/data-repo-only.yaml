# if Rawls config specifies dataRepo.enabled = true, this file is merged into api-docs.yaml.
# merge mechanics are implemented by Circe's Json.deepMerge (tl;dr: objects are merged by key,
# values are overwritten)
#
# so, this file should only contain the swagger additions to support data repo integration.

paths:
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities:
    get:
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete:
    post:
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
      requestBody:
        description: Set of entities to delete
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AttributeEntityReference'
        required: true
      x-codegen-request-body-name: entities
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}:
    get:
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/entityTypePathParam'
        - $ref: '#/components/parameters/entityNamePathParam'
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}:
    get:
      parameters:
        - $ref: '#/components/parameters/workspaceNamespacePathParam'
        - $ref: '#/components/parameters/workspaceNamePathParam'
        - $ref: '#/components/parameters/entityTypePathParam'
        - name: page
          in: query
          description: Page number, 1-indexed (default 1)
          schema:
            minimum: 1
            type: number
            default: 1
        - name: pageSize
          in: query
          description: Page size (default 10)
          schema:
            minimum: 1
            type: number
            default: 10
        - name: sortField
          in: query
          description: Sort field (default "name")
          schema:
            type: string
            default: name
        - name: sortDirection
          in: query
          description: Sort direction (asc or desc, default asc)
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - name: filterTerms
          in: query
          description: Filter terms
          schema:
            type: string
        - $ref: '#/components/parameters/dataReferenceQueryParam'
        - $ref: '#/components/parameters/billingProjectQueryParam'
  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots:
    parameters:
      - $ref: '#/components/parameters/workspaceNamespacePathParam'
      - $ref: '#/components/parameters/workspaceNamePathParam'
    get:
      tags:
        - snapshots
      summary: List snapshots
      description: Enumerate references to snapshots in the Terra Data Repo
      operationId: enumerateDataRepoSnapshot
      parameters:
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result
            set.
          required: true
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          description: The number of items to return.
          required: true
          schema:
            type: integer
          example: 10
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReferenceList'
        404:
          description: Workspace not found or user lacks permissions
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
    post:
      tags:
        - snapshots
      summary: Create a snapshot
      description: Add a reference to a snapshot in the Terra Data Repo
      operationId: createDataRepoSnapshot
      requestBody:
        description: Reference to the Data Repo snapshot
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/NamedDataRepoSnapshot'
        required: true
      responses:
        201:
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReference'
        404:
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
      x-codegen-request-body-name: namedDataRepoSnapshot
  /api/workspaces/{workspaceNamespace}/{workspaceName}/snapshots/{snapshotId}:
    parameters:
      - $ref: '#/components/parameters/workspaceNamespacePathParam'
      - $ref: '#/components/parameters/workspaceNamePathParam'
      - $ref: '#/components/parameters/snapshotIdPathParam'
    get:
      tags:
        - snapshots
      summary: Get a snapshot
      description: Get a reference to a snapshot in the Terra Data Repo
      operationId: getDataRepoSnapshot
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DataRepoSnapshotReference'
        404:
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
    patch:
      summary: Update name or description of a reference to a snapshot in the Terra Data Repo.
      operationId: updateDataRepoSnapshot
      tags:
        - snapshots
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataReferenceRequestBody'
      responses:
        204:
          description: Successful Request
          content: { }
        404:
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
    delete:
      tags:
        - snapshots
      summary: Delete a snapshot
      description: Delete a workspace's reference to a snapshot in the Terra Data
        Repo
      operationId: deleteDataRepoSnapshot
      responses:
        204:
          description: Successful Request
          content: {}
        404:
          description: Workspace or snapshot not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
        500:
          description: Rawls Internal Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorReport'
components:
  schemas:
    DataRepoSnapshot:
      description: A raw data repo snapshot reference from workspace manager.
      type: object
      required: [instanceName, snapshot]
      properties:
        instanceName:
          description: The name of the Data Repo instance
          type: string
        snapshot:
          description: The ID of the Data Repo snapshot
          type: string
    NamedDataRepoSnapshot:
      type: object
      properties:
        snapshotId:
          type: string
          description: The ID of the snapshot in Terra Data Repo
        name:
          type: string
          description: The name of the snapshot
        description:
          type: string
          description: A description for the snapshot
      description: A Data Repo snapshot
    DataRepoSnapshotReference:
      type: object
      properties:
        referenceId:
          type: string
        name:
          type: string
        description:
          type: string
        workspaceId:
          type: string
        referenceType:
          type: string
        reference:
          $ref: '#/components/schemas/DataRepoSnapshot'
        cloningInstructions:
          type: string
      description: A Data Reference definition from Workspace Manager
    UpdateDataReferenceRequestBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    DataRepoSnapshotReferenceList:
      type: object
      properties:
        resources:
          type: array
          description: A list of Data Reference definitions from Workspace Manager
          items:
            $ref: '#/components/schemas/DataRepoSnapshotReference'
      description: A list of DataRepoSnapshotReferences
  parameters:
    billingProjectQueryParam:
      name: billingProject
      in: query
      description: Billing project to use for queries to the data reference
      schema:
        type: string
    dataReferenceQueryParam:
      name: dataReference
      in: query
      description: Data reference name to query for entity metadata
      schema:
        type: string
    entityNamePathParam:
      name: entityName
      in: path
      description: Entity Name
      required: true
      schema:
        type: string
    entityTypePathParam:
      name: entityType
      in: path
      description: Entity Type
      required: true
      schema:
        type: string
    snapshotIdPathParam:
      name: snapshotId
      in: path
      description: The snapshot's referenceId
      required: true
      schema:
        type: string
    workspaceNamespacePathParam:
      name: workspaceNamespace
      in: path
      description: The workspace namespace
      required: true
      schema:
        type: string
    workspaceNamePathParam:
      name: workspaceName
      in: path
      description: The workspace name
      required: true
      schema:
        type: string
