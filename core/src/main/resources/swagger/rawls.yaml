
swagger: '2.0'
info:
  version: 1.0.0
  title: Workspace API
  description: Workspace
  contact:
    email: workspace@broadinstitute.org
  license:
    name: BSD
    url: 'http://opensource.org/licenses/BSD-3-Clause'
  termsOfService: 'http://www.github.com/broadinstitute/rawls'

paths:
  '/version':
    get:
      responses:
        '200':
          description: Version information of this application
          schema:
            $ref: '#/definitions/ApplicationVersion'
      description: get version information of this application
      tags:
        - version
      summary: get version information of this application
      operationId: version
  '/api/version/executionEngine':
    get:
      responses:
        '200':
          description: The currently running version of the execution engine
          schema:
            $ref: '#/definitions/ExecutionEngineVersion'
      description: get version information of the execution engine
      tags:
        - version
      summary: get version information of the execution engine
      operationId: execVersion
      security:
        - authorization:
          - openid
          - email
          - profile
  '/api/admin/billing/list/{userEmail}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            description: list of billing projects for this user
            items:
              type: string
        '403':
          description: You must be an admin to list user projects
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description:  User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: list billing projects for a user
      parameters:
        - in: path
          description: User Email
          name: userEmail
          required: true
          type: string
      tags:
        - admin
        - billing
      summary: list billing projects for a user
      operationId: listUserBillingProjects
      security:
        - authorization:
          - openid
          - email
          - profile
  '/api/admin/billing/{projectId}':
    delete:
      responses:
        '200':
          description: Successfully Deleted Billing Project
        '403':
          description: You must be an admin to delete a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Billing Project not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: delete billing project from Google and Rawls DB
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
      tags:
        - admin
        - billing
      summary: delete billing project from Google and Rawls DB
      operationId: deleteBillingProject
      security:
        - authorization:
          - openid
          - email
          - profile
  '/api/admin/billing/{projectId}/{role}/{email}':
    put:
      responses:
        '200':
          description: Successfully Added User To Billing Project
        '403':
          description: You must be an admin to add a user to a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Billing Project or User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: add user to billing project
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: role
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of the user or group to add
          name: email
          required: true
          type: string
      tags:
        - admin
        - billing
      summary: add user to billing project
      operationId: adminAddUserToBillingProject
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '200':
          description: Successfully Removed User From Billing Project
        '403':
          description: You must be an admin to remove a user from a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Billing Project or User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: remove user from billing project
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: role
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of the user or group to remove
          name: email
          required: true
          type: string
      tags:
        - admin
        - billing
      summary: remove user from billing project
      operationId: adminRemoveUserFromBillingProject
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/billing':
    post:
      responses:
        '204':
          description: Successfully Created Billing Project in Rawls and Google
        '400':
          description: firecloud billing user must be an admin of the billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: You must be an admin of the google billing account
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: project already exists in rawls or google
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: create new billing project in rawls and google
      parameters:
        - in: body
          description: create project request
          name: createProjectRequest
          required: true
          schema:
            $ref: '#/definitions/CreateRawlsBillingProjectFullRequest'
      tags:
        - billing
      summary: create billing project in rawls and google
      operationId: createBillingProjectFull
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing
  '/api/billing/{projectId}/members':
    get:
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/RawlsBillingProjectMember'
        '403':
          description: You must be a project owner to view the members of a project
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: list members of billing project the caller owns
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
      tags:
        - billing
      summary: list members of billing project the caller owns
      operationId: listBillingProjectMembers
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/billing/{projectId}/{role}/{email}':
    put:
      responses:
        '200':
          description: Successfully Added User/Group To Billing Project
        '403':
          description: You must be a project owner to add a user to a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: add user or group to billing project the caller owns
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: role
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - billing
      summary: add user or group to billing project the caller owns
      operationId: addUserToBillingProject
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '200':
          description: Successfully Removed User From Billing Project
        '403':
          description: You must be a project owner to add a user to a billing project
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: remove user or group from billing project the caller owns
      parameters:
        - in: path
          description: Project ID
          name: projectId
          required: true
          type: string
        - in: path
          description: role of user for project
          name: role
          required: true
          type: string
          enum: ["user", "owner"]
        - in: path
          description: email of user or group to remove
          name: email
          required: true
          type: string
      tags:
        - billing
      summary: remove user or group from billing project the caller owns
      operationId: removeUserFromBillingProject
      security:
        - authorization:
            - openid
            - email
            - profile

  '/api/admin/groups':
     post:
       responses:
         '201':
           description: Group creation successful
         '403':
           description: You must be an admin to create a group
           schema:
             $ref: '#/definitions/ErrorReport'
         '409':
           description: Group already exists
           schema:
             $ref: '#/definitions/ErrorReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively create a group
       tags:
         - admin
         - groups
       summary: create a group
       operationId: adminCreateGroup
       parameters:
         - in: body
           description: group reference
           name: groupRef
           required: true
           schema:
             $ref: '#/definitions/RawlsGroupRef'
       security:
         - authorization:
             - openid
             - email
             - profile
     delete:
       responses:
         '200':
           description: Group deletion successful
         '403':
           description: You must be an admin to delete a group
           schema:
             $ref: '#/definitions/ErrorReport'
         '404':
           description: Group not found
           schema:
             $ref: '#/definitions/ErrorReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively delete a group
       tags:
         - admin
         - groups
       summary: delete a group
       operationId: adminDeleteGroup
       parameters:
         - in: body
           description: group reference
           name: groupRef
           required: true
           schema:
             $ref: '#/definitions/RawlsGroupRef'
       security:
         - authorization:
             - openid
             - email
             - profile
  '/api/admin/groups/{groupName}/members':
     post:
       responses:
         '204':
           description: Successfully added members
         '403':
           description: You must be an admin to add members to a group
           schema:
             $ref: '#/definitions/ErrorReport'
         '404':
           description: Unable to find group or member(s)
           schema:
             $ref: '#/definitions/ErrorReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively add members to a group
       tags:
         - admin
         - groups
       summary: add members to a group
       operationId: adminAddMembers
       parameters:
         - in: path
           description: group name
           name: groupName
           required: true
           type: string
         - in: body
           description: member list
           name: memberList
           required: true
           schema:
             $ref: '#/definitions/RawlsGroupMemberList'
       security:
         - authorization:
             - openid
             - email
             - profile
     put:
       responses:
         '204':
           description: Successfully overwrote members
         '403':
           description: You must be an admin to overwrite members of a group
           schema:
             $ref: '#/definitions/ErrorReport'
         '404':
           description: Unable to find group or member(s)
           schema:
             $ref: '#/definitions/ErrorReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively overwrite group membership. Any existing members not in the submitted list are removed, any missing members in the submitted list are added.
       tags:
         - admin
         - groups
       summary: overwrite group membership
       operationId: adminOverwriteMembers
       parameters:
         - in: path
           description: group name
           name: groupName
           required: true
           type: string
         - in: body
           description: member list
           name: memberList
           required: true
           schema:
             $ref: '#/definitions/RawlsGroupMemberList'
       security:
         - authorization:
             - openid
             - email
             - profile
     delete:
       responses:
         '204':
           description: Successfully removed members
         '403':
           description: You must be an admin to remove members from a group
           schema:
             $ref: '#/definitions/ErrorReport'
         '404':
           description: Unable to find group or member(s)
           schema:
             $ref: '#/definitions/ErrorReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively remove members from a group
       tags:
         - admin
         - groups
       summary: remove members from a group
       operationId: adminRemoveMembers
       parameters:
         - in: path
           description: group name
           name: groupName
           required: true
           type: string
         - in: body
           description: member list
           name: memberList
           required: true
           schema:
             $ref: '#/definitions/RawlsGroupMemberList'
       security:
         - authorization:
             - openid
             - email
             - profile
     get:
       responses:
         '200':
            schema:
              type: array
              description: list of users
              items:
                type: string
         '403':
            description: You must be an admin to list members of a group
            schema:
              $ref: '#/definitions/ErrorReport'
         '404':
            description: Unable to find group
         '500':
            description: Rawls Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
       description: Administratively list members to a group
       tags:
         - admin
         - groups
       summary: list members in a group
       operationId: adminListMembers
       parameters:
         - in: path
           description: group name
           name: groupName
           required: true
           type: string
       security:
         - authorization:
             - openid
             - email
             - profile
  '/api/admin/groups/{groupName}/sync':
     post:
       responses:
         '200':
           description: Successfully synchronized members
           schema:
             $ref: '#/definitions/SyncReport'
         '403':
           description: You must be an admin to call this end point
           schema:
             $ref: '#/definitions/ErrorReport'
         '404':
           description: Unable to find group
           schema:
             $ref: '#/definitions/ErrorReport'
         '502':
           description: Google reported error adding or removing member
           schema:
             $ref: '#/definitions/SyncReport'
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Administratively synchronize backing google group to rawls group
       tags:
         - admin
         - groups
       summary: synchronize backing google group to rawls group
       operationId: adminGroupSync
       parameters:
         - in: path
           description: group name
           name: groupName
           required: true
           type: string
       security:
         - authorization:
             - openid
             - email
             - profile
  '/api/admin/submissions':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/ActiveSubmission'
        '403':
          description: You must be an admin to list active submissions
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Trouble talking to Google
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all active submissions in all workspaces
      tags:
        - admin
        - submissions
      summary: list active submissions
      operationId: listAllActiveSubmissions
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/submissions/{workspaceNamespace}/{workspaceName}/{submissionId}':
    delete:
      responses:
        '204':
          description: Successful Request
        '403':
          description: You must be an admin to abort a submission
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Trouble talking to Google or Cromwell
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Administratively abort an active submission
      tags:
        - admin
        - submissions
      summary: abort a submission
      operationId: adminAbortSubmission
      parameters:
        - in: path
          description: workspaceNamespace of the submission
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: workspaceName of the submission
          name: workspaceName
          required: true
          type: string
        - in: path
          description: id of the submission
          name: submissionId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/users':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RawlsUserInfoList'
        '403':
          description: You must be an admin to list users
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all users
      tags:
        - admin
        - users
      summary: list users
      operationId: listUsers
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/user/ldap/{userSubjectId}':
    put:
     responses:
       '201':
         description: Added user to LDAP
       '403':
         description: Only administrators can add users to LDAP
       '409':
         description: User is already added to LDAP
       '500':
         description: Rawls Internal Error
         schema:
           $ref: '#/definitions/ErrorReport'
     description: "adds a user to LDAP"
     tags:
       - admin
       - users
     summary: Add user to LDAP
     operationId: ldapAdd
     parameters:
      - in: path
        description: subject id of user
        name: userSubjectId
        required: true
        type: string
     security:
       - authorization:
          - openid
          - email
          - profile
    delete:
     responses:
       '204':
         description: User deleted from LDAP
       '403':
         description: Only administrators can delete users from LDAP
       '500':
         description: Rawls Internal Error
         schema:
           $ref: '#/definitions/ErrorReport'
     description: "Removes a user from LDAP"
     tags:
       - admin
       - users
     summary: Removes a user from LDAP
     operationId: ldapRemove
     parameters:
      - in: path
        description: subject id of user
        name: userSubjectId
        required: true
        type: string
     security:
       - authorization:
          - openid
          - email
          - profile
  '/api/admin/user/{userSubjectId}/enable':
       post:
         responses:
           '204':
             description: Successful Request
           '403':
             description: Only administrators can enable users
           '500':
             description: Rawls Internal Error
             schema:
               $ref: '#/definitions/ErrorReport'
         description: "creates a user in the Rawls system"
         tags:
           - admin
           - users
         summary: Enable user
         operationId: enable
         parameters:
          - in: path
            description: subject id of user
            name: userSubjectId
            required: true
            type: string
         security:
           - authorization:
              - openid
              - email
              - profile
  '/api/admin/user/{userSubjectId}/disable':
     post:
       responses:
         '204':
           description: Successful Request
         '403':
           description: Only administrators can disable users
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "disables a user in the Rawls system"
       tags:
         - admin
         - users
       summary: Disable user
       operationId: disable
       parameters:
        - in: path
          description: subject id of user
          name: userSubjectId
          required: true
          type: string
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/admin/user/{userSubjectId}':
       delete:
         responses:
           '204':
             description: Successful Request
           '400':
             description: Cannot delete user with submissions
           '403':
             description: Only administrators can delete users
           '500':
             description: Rawls Internal Error
             schema:
               $ref: '#/definitions/ErrorReport'
         description: "Deletes a user in the Rawls system.  This endpoint should only be used with test users who will never have submissions."
         tags:
           - admin
           - users
         summary: Delete user
         operationId: delete
         parameters:
          - in: path
            description: subject id of user
            name: userSubjectId
            required: true
            type: string
         security:
           - authorization:
              - openid
              - email
              - profile
  '/api/admin/user/{userSubjectId}':
     get:
       responses:
         '200':
           description: Successful Request
           schema:
             $ref: '#/definitions/UserStatus'
         '403':
           description: You must be an admin to get user status
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "gets the status of a user"
       tags:
         - admin
         - users
       summary: Get status of user
       operationId: adminStatus
       parameters:
        - in: path
          description: subject id of user
          name: userSubjectId
          required: true
          type: string
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/admin/user/role/curator/{userEmail}':
     put:
       responses:
         '200':
           description: Successful Request
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "adds a user to the list of curators"
       tags:
         - admin
         - users
       summary: Add a library curator
       operationId: adminAddCurator
       parameters:
        - in: path
          description: email of user
          name: userEmail
          required: true
          type: string
       security:
         - authorization:
            - openid
            - email
            - profile
     delete:
       responses:
         '200':
           description: Successful Request
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "removes a user from the list of curators"
       tags:
         - admin
         - users
       summary: Remove a library curator
       operationId: adminRemoveCurator
       parameters:
        - in: path
          description: email of user
          name: userEmail
          required: true
          type: string
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/admin/allUserReadAccess/{workspaceNamespace}/{workspaceName}':
    get:
      responses:
        '204':
          description: All users have read access to this workspace
        '404':
          description: Not all users have read access to this workspace or the workspace does not exist
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Query all user read access status for a workspace
      tags:
        - admin
        - workspaces
      summary: Query workspace public access
      operationId: getAllUserReadAccess
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    put:
      responses:
        '201':
          description: Access granted
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Grant all user read access status for a workspace
      tags:
        - admin
        - workspaces
      summary: Grant all user read access status for a workspace
      operationId: grantAllUserReadAccess
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '200':
          description: Access revoked
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Revoke all user read access status for a workspace
      tags:
        - admin
        - workspaces
      summary: Revoke all user read access status for a workspace
      operationId: revokeAllUserReadAccess
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/workspaces':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Workspace'
        '403':
          description: You must be an admin to list workspaces
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all workspaces
      tags:
        - admin
        - workspaces
      summary: list all workspaces
      operationId: listAllWorkspaces
      parameters:
        - in: query
          description: Optional workspace attribute to filter on
          name: attributeName
          required: false
          type: string
        - in: query
          description: attribute value (for String attributes)
          name: valueString
          required: false
          type: string
        - in: query
          description: attribute value (for numerical attributes)
          name: valueNumber
          required: false
          type: number
        - in: query
          description: attribute value (for boolean attributes)
          name: valueBoolean
          required: false
          type: boolean
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/workspaces/{workspaceNamespace}/{workspaceName}':
    delete:
          responses:
            '202':
              description: Delete request accepted. Workspace bucket will be deleted within 24 hours.
            '403':
              description: You must be an admin to access this endpoint
              schema:
                $ref: '#/definitions/ErrorReport'
            '404':
              description: Workspace not found
              schema:
                $ref: '#/definitions/ErrorReport'
            '500':
              description: Rawls Internal Error
              schema:
                $ref: '#/definitions/ErrorReport'
          description: Delete a workspace
          tags:
            - admin
            - workspaces
          summary: Admin delete workspace
          operationId: admin_delete_workspace
          parameters:
            - in: path
              description: Workspace Namespace
              name: workspaceNamespace
              required: true
              type: string
            - in: path
              description: Workspace Name
              name: workspaceName
              required: true
              type: string
          security:
            - authorization:
                - openid
                - email
                - profile
  '/api/admin/refreshToken/{userSubjectId}':
    delete:
      responses:
        '200':
          description: "user's refresh token revoked and removed"
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: "revoke and remove a user's refresh token"
      tags:
        - admin
      summary: "Admin revoke and remove a user's refresh token"
      operationId: admin_delete_refresh_token
      parameters:
        - in: path
          description: "user's subject id"
          name: userSubjectId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/allRefreshTokens':
    delete:
      responses:
        '200':
          description: all users' refresh tokens revoked and removed
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: revoke and remove all users' refresh token
      tags:
        - admin
      summary: Admin revoke and remove all users' refresh token
      operationId: admin_delete_all_refresh_tokens
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/genomics/operations/{jobId}':
    get:
      responses:
        '200':
          description: operations info
        '403':
          description: You must be an admin
        '404':
          description: jobId not found
        '500':
          description: Rawls Internal Error
      description: retrieve operations info from Google Genomics API
      tags:
        - admin
      summary: retrieve operations info from Google Genomics API
      operationId: admin_genomics_operations_get
      parameters:
        - in: path
          description: operations job id; do not include "operations/"
          name: jobId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/admin/statistics':
    get:
      responses:
        '200':
          description: FireCloud statistics
        '403':
          description: You must be an admin
        '500':
          description: Rawls Internal Error
      description: retrieve statistics for a window on FireCloud
      tags:
        - admin
      summary: retrieve statistics on FireCloud
      operationId: admin_statistics_get
      parameters:
        - in: query
          description: start date (YYYY-MM-DD)
          name: startDate
          required: true
          type: string
          format: date
        - in: query
          description: end date (YYYY-MM-DD)
          name: endDate
          required: true
          type: string
          format: date
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissions':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmissionListResponse'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all submissions run in this workspace
      tags:
        - submissions
      summary: List all submissions
      operationId: listSubmissions
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    post:
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/SubmissionReport'
        '400':
          description: Expression evaluation failed or entities are not of type required by method config
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace, Method Configuration or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Trouble talking to Agora
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Submit a new job
      tags:
        - submissions
      summary: Create submission
      operationId: createSubmission
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Description of a submission.
          name: submission
          required: true
          schema:
            $ref: '#/definitions/SubmissionRequest'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissionsCount':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: object
            description: Map[String,Int]
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Counts all submissions run in this workspace, grouped by status. Returns a map of status:count.
      tags:
        - submissions
      summary: Count submissions by status
      operationId: countSubmissions
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/validate':
    post:
      responses:
        '200':
          description: Validation Response
          schema:
            $ref: '#/definitions/SubmissionValidationReport'
        '400':
          description: Expression evaluation failed or entities are not of type required by method config
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace, Method Configuration or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Trouble talking to Agora
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Validate expression syntax for a submission
      tags:
        - submissions
      summary: Validate submission
      operationId: validateSubmission
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Description of a submission.
          name: submission
          required: true
          schema:
            $ref: '#/definitions/SubmissionRequest'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/Submission'
        '404':
          description: Workspace or submission not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Monitor submission status
      tags:
        - submissions
      summary: Monitor submission status
      operationId: getSubmissionStatus
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Submission Id
          name: submissionId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '204':
          description: Submission successfully aborted
        '404':
          description: Workspace or submission not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Unable to abort all workflows in this submission
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Abort a currently running submission
      tags:
        - submissions
      summary: Abort submission
      operationId: abortSubmission
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Submission Id
          name: submissionId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}/outputs':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowOutputs'
        '404':
          description: Workspace, Submission or Workflow not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
        '502':
          description: Unable to retrieve outputs or logs from Cromwell
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Retrieve outputs for a workflow
      tags:
        - submissions
      summary: Get workflow outputs
      operationId: getWorkflowOutputs
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Submission Id
          name: submissionId
          required: true
          type: string
        - in: path
          description: Workflow Id
          name: workflowId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/submissions/{submissionId}/workflows/{workflowId}':
    get:
      responses:
        '200':
          description: Successful Request
        '404':
          description: Workspace, Submission or Workflow not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get call-level metadata for workflow
      tags:
        - submissions
      summary: Get call-level metadata for workflow
      operationId: workflowMetadata
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Submission Id
          name: submissionId
          required: true
          type: string
        - in: path
          description: Workflow Id
          name: workflowId
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/submissions/queueStatus':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkflowQueueStatusResponse'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List workflow counts by queueing state
      tags:
        - submissions
      summary: workflow queue status
      operationId: workflowQueueStatus
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entityQuery/{entityType}':
    get:
      tags:
        - entities
      operationId: entityQuery
      summary: Paginated query for entities in a workspace
      produces:
        - application/json
      parameters:
        - name: workspaceNamespace
          description: Workspace Namespace
          required: true
          type: string
          in: path
        - name: workspaceName
          description: Workspace Name
          required: true
          type: string
          in: path
        - name: entityType
          description: Entity Type
          required: true
          type: string
          in: path
        - name: page
          description: Page number, 1-indexed (default 1)
          default: 1
          minimum: 1
          type: number
          in: query
        - name: pageSize
          description: Page size (default 10)
          default: 10
          minimum: 1
          type: number
          in: query
        - name: sortField
          description: Sort field (default "name")
          default: name
          type: string
          in: query
        - name: sortDirection
          description: Sort direction (asc or desc, default asc)
          default: asc
          enum: ["asc","desc"]
          type: string
          in: query
        - name: filterTerms
          description: Filter terms
          type: string
          in: query
      responses:
        200:
          description: List of entities in workspace
          schema:
            $ref: '#/definitions/EntityQueryResponse'
        404:
          description: Workspace or entity type does not exist
        500:
          description: Internal Server Error
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/rename':
    post:
      responses:
        '204':
          description: Successful Request
        '404':
          description: Workspace or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: New name for entity already exists in workspace
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Rename an entity
      tags:
        - entities
      summary: rename entity in a workspace
      operationId: renameEntity
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Entity Type
          name: entityType
          required: true
          type: string
        - in: path
          description: Entity Name
          name: entityName
          required: true
          type: string
        - in: body
          description: New entity name
          name: newEntityNameJson
          required: true
          schema:
            $ref: '#/definitions/EntityName'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}/evaluate':
    post:
      responses:
        '200':
          description: Successful Request
        '400':
          description: Invalid entity expression
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Evaluates an attribute expression taking the given entity as root
      tags:
        - entities
      summary: evaluate expression on an entity
      operationId: evaluateExpression
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Entity Type
          name: entityType
          required: true
          type: string
        - in: path
          description: Entity Name
          name: entityName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: object
            description: Map[String,EntityTypeMetadata]
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: 'Get entity type metadata: for each type, the number of entities of that type and all attribute names used'
      tags:
        - entities
      summary: Entity type metadata
      operationId: entity_type_metadata
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    post:
      responses:
        '201':
          description: Entity created
          headers:
            Location:
              description: The path to the newly created entity
              type: string
          schema:
            $ref: '#/definitions/Entity'
        '403':
          description: User does not have permission to update attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Entity already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Create entity
      tags:
        - entities
      summary: Create entity in a workspace
      operationId: create_entity
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Entity data
          name: entityJson
          required: true
          schema:
            $ref: '#/definitions/Entity'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        '404':
          description: Workspace or entityType not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all entities of a given type
      tags:
        - entities
      summary: list all entities of given type in a workspace
      operationId: list_entities
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Entity Type
          name: entityType
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/{entityType}/{entityName}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/Entity'
        '404':
          description: Workspace or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get an entity
      tags:
        - entities
      summary: Get entity in a workspace
      operationId: get_entity
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Entity Type
          name: entityType
          required: true
          type: string
        - in: path
          description: Entity Name
          name: entityName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    patch:
      responses:
        '200':
          description: Entity updated
          schema:
            $ref: '#/definitions/Entity'
        '400':
          description: Attribute does not exist
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: User does not have permission to update attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace or Entity not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Update an entity
      tags:
        - entities
      summary: Update entity in a workspace
      operationId: update_entity
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Entity Type
          name: entityType
          required: true
          type: string
        - in: path
          description: Entity Name
          name: entityName
          required: true
          type: string
        - in: body
          description: Update operations for attributes
          name: attributeUpdateJson
          required: false
          schema:
            $ref: '#/definitions/AttributeUpdateOperation'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/delete':
    post:
      responses:
        '204':
          description: Successful Request
        '400':
          description: Not all Entities exist
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Cannot create dangling references when deleting Entities - must specify whole set
          schema:
            type: array
            items:
              $ref: '#/definitions/AttributeEntityReference'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Delete entities
      tags:
        - entities
      summary: delete entities in a workspace
      operationId: delete_entities
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Set of entities to delete
          name: entities
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AttributeEntityReference'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/workspaces/entities/copy:
    post:
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/EntityCopyResponse'
        '404':
          description: Source workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: There are conflicts in your copy operation. Retry with the paramater linkExistingEntities=true to link all soft conflicts to the entities that already exist in your workspace.
          schema:
            $ref: '#/definitions/EntityCopyResponse'
        '422':
          description: Destination workspace must match source's authorization domain, if the source has one
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Copy entities from one workspace to another
      tags:
        - entities
      summary: copy entities from one workspace into another workspace
      operationId: copy_entities
      parameters:
        - in: query
          description: true to link new entities to existing entities, false to fail instead of link
          name: linkExistingEntities
          required: false
          default: false
          type: boolean
        - in: body
          description: Source and destination for entities
          name: entityCopyDefinition
          required: true
          schema:
            $ref: '#/definitions/EntityCopyDefinition'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpsert':
    post:
      responses:
        '204':
          description: Entities upserted
        '400':
          description: Invalid attribute update operation
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: User does not have permission to update attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Batch upsert (update or insert if not already there) entities into a workspace
      tags:
        - entities
      summary: batch upsert entities into a workspace
      operationId: batch_upsert_entities
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Entity update definitions
          name: batchUpsertJson
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/EntityUpdateDefinition'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/entities/batchUpdate':
    post:
      responses:
        '204':
          description: Entities updated
        '400':
          description: Invalid attribute update operation
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: User does not have permission to update attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Batch update entities into a workspace. All referenced entities must already exist.
      tags:
        - entities
      summary: Batch update entities
      operationId: batch_update_entities
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Entity update definitions
          name: batchUpdateJson
          required: true
          schema:
            $ref: '#/definitions/EntityUpdateDefinition'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs':
    post:
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/ValidatedMethodConfiguration'
          headers:
            Location:
              description: The path to the newly created method configuration
              type: string
        '403':
          description: Invalid attribute namespace(s) in outputs
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: MethodConfiguration already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Create method configurations
      tags:
        - methodconfigs
      summary: Create Method configuration in a workspace
      operationId: create_method_configuration
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Method Configuration contents
          name: methodConfigJson
          required: true
          schema:
            $ref: '#/definitions/MethodConfiguration'
      security:
        - authorization:
            - openid
            - email
            - profile
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/MethodConfiguration'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List all method configurations in a workspace
      tags:
        - methodconfigs
      summary: list method configurations in a workspace
      operationId: list_method_configurations
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/validate':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/ValidatedMethodConfiguration'
        '404':
          description: Workspace or Method Configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Validate a method configuration
      tags:
        - methodconfigs
      summary: get syntax validation information for a method configuration
      operationId: validate_method_configuration
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/MethodConfiguration'
        '404':
          description: Workspace or Method Configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get a method configuration
      tags:
        - methodconfigs
      summary: get method configuration in a workspace
      operationId: get_method_configuration
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '204':
          description: Successful Request
        '404':
          description: Workspace or Method Configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Delete a method configuration
      tags:
        - methodconfigs
      summary: delete method configuration in a workspace
      operationId: delete_method_configuration
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    put:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/ValidatedMethodConfiguration'
        '403':
          description: Invalid attribute namespace(s) in outputs
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace or method configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Update method configuration in a workspace
      tags:
        - methodconfigs
      summary: Update method configuration in a workspace
      operationId: update_method_configuration
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string
        - in: body
          description: New Method Configuration contents
          name: newMethodConfigJson
          required: true
          schema:
            $ref: '#/definitions/MethodConfiguration'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/methodconfigs/{configNamespace}/{configName}/rename':
    post:
      responses:
        '204':
          description: Successful Request
        '404':
          description: Workspace or Method Configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Method config with the new name already exists in workspace
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Rename method configuration
      tags:
        - methodconfigs
      summary: rename method configuration in a workspace
      operationId: rename_method_config
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: path
          description: Method Configuration Namespace
          name: configNamespace
          required: true
          type: string
        - in: path
          description: Method Configuration Name
          name: configName
          required: true
          type: string
        - in: body
          description: New Method Configuration Name
          name: newMethodConfigurationName
          required: true
          schema:
            $ref: '#/definitions/MethodConfigurationName'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/methodconfigs/copy:
    post:
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/MethodConfiguration'
          headers:
            Location:
              description: The path to the copied method configuration
              type: string
        '403':
          description: Invalid attribute namespace(s) in outputs
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Source workspace or method configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Destination method configuration by that name already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Copy method configuration from another workspace
      tags:
        - methodconfigs
      summary: Copy method configuration in a workspace from another workspace
      operationId: copy_method_configuration
      parameters:
        - in: body
          description: Source and destination method configuration names
          name: methodConfigurationNamePair
          required: true
          schema:
            $ref: '#/definitions/MethodConfigurationNamePair'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/methodconfigs/copyFromMethodRepo:
    post:
      responses:
        '201':
          description: Successful Request
          schema:
            $ref: '#/definitions/MethodConfiguration'
          headers:
            Location:
              description: The path to the newly created method configuration
              type: string
        '403':
          description: Invalid attribute namespace(s) in outputs
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Source method configuration not found in method repo
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Destination method configuration by that name already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '422':
          description: Error parsing source method configuration
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Copy a method configuration from method repo to a workspace
      tags:
        - methodconfigs
      summary: Copy method configuration from the method repository
      operationId: copy_repo_configuration
      parameters:
        - in: body
          description: Import from Method Repository
          name: methodRepoImport
          required: true
          schema:
            $ref: '#/definitions/MethodRepoConfigurationImport'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/methodconfigs/copyToMethodRepo:
    post:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/AgoraEntity'
        '404':
          description: Source method configuration not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Copy method configuration from workspace to method repo
      tags:
        - methodconfigs
      summary: Copy method configuration from workspace to the method repository
      operationId: copy_configuration_to_repo
      parameters:
        - in: body
          description: Export to Method Repository
          name: methodRepoExport
          required: true
          schema:
            $ref: '#/definitions/MethodRepoConfigurationExport'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/methodconfigs/template:
    post:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/MethodConfiguration'
        '400':
          description: Method WDL can't be parsed
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: No such method
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Create a template for a method configuration from a method in the method repository
      tags:
        - methodconfigs
      summary: Create a template for a method configuration from a method in the method repository
      operationId: method_config_template
      parameters:
        - in: body
          description: name of method to use for template
          name: methodName
          required: true
          schema:
            $ref: '#/definitions/MethodRepoMethod'
      security:
        - authorization:
            - openid
            - email
            - profile
  /api/methodconfigs/inputsOutputs:
    post:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/MethodInputsOutputs'
        '400':
          description: Method WDL can't be parsed
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: No such method
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get information about a method's inputs and outputs
      tags:
        - methodconfigs
      summary: Get information about a method's inputs and outputs
      operationId: method_inputs_outputs
      parameters:
        - in: body
          description: name of method to use for template
          name: methodName
          required: true
          schema:
            $ref: '#/definitions/MethodRepoMethod'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/checkBucketReadAccess':
    get:
      responses:
        '200':
          description: Successful Request
        '403':
          description: Insufficient permissions to access workspace bucket
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace Not Found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Read a workspace bucket
      tags:
        - workspaces
      summary: Read workspace bucket
      operationId: readBucket
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/lock':
    put:
      responses:
        '204':
          description: Successful Request
        '403':
          description: Insufficient permissions to lock workspace (must be owner)
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace Not Found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Workspace cannot be locked due to running submissions
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Lock a workspace
      tags:
        - workspaces
      summary: Lock workspace
      operationId: lockWorkspace
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/unlock':
    put:
      responses:
        '204':
          description: Successful Request
        '403':
          description: Insufficient permissions to lock workspace (must be owner)
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace Not Found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Unlock a workspace
      tags:
        - workspaces
      summary: Unlock workspace
      operationId: unlockWorkspace
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/acl':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACL'
        '403':
          description: Insufficient permissions to get workspace ACLs (must be owner)
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get access control list for a workspace
      tags:
        - workspaces
      summary: Get workspace ACL
      operationId: getACL
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    patch:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceACLUpdateResponseList'
        '400':
          description: Attempting to change access controls you can't (your own, or public-access group)
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: Insufficient permissions to edit workspace ACLs (must be owner)
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace, user or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Edit access control list for a workspace
      tags:
        - workspaces
      summary: Update workspace ACL
      operationId: updateACL
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: query
          description: true to invite unregistered users, false to ignore
          name: inviteUsersNotFound
          required: true
          default: false
          type: boolean
        - in: body
          description: Series of ACL updates for workspace
          name: aclUpdates
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceACLUpdate'
      security:
        - authorization:
            - openid
            - email
            - profile

  '/api/workspaces/{workspaceNamespace}/{workspaceName}/catalog':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceCatalog'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Returns workspace catalog permissions for users and groups with the permission for the workspace
      tags:
        - workspaces
      summary: Get catalog permissions
      operationId: getCatalog
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string

      security:
        - authorization:
            - openid
            - email
            - profile
    patch:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceCatalogUpdateResponseList'
        '404':
          description: Workspace, user or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Edit catalog permissions for a workspace
      tags:
        - workspaces
      summary: Update catalog permission
      operationId: updateCatalog
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Series of Catalog updates for workspace
          name: catalogUpdates
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceCatalog'
      security:
        - authorization:
            - openid
            - email
            - profile

  '/api/workspaces':
    post:
      responses:
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly created workspace
              type: string
        '400':
          description: Workspace namespace is not ready
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: User does not have access to create workspace in namespace or user does not have permission to set attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Workspace by that name already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Create a new workspace
      tags:
        - workspaces
      summary: Create new workspace
      operationId: create
      parameters:
        - in: body
          description: Workspace contents
          name: workspaceJson
          required: true
          schema:
            $ref: '#/definitions/WorkspaceRequest'
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/devstorage.full_control
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkspaceResponse'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: List workspaces you have access to
      tags:
        - workspaces
      summary: List workspaces
      operationId: list
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/workspaces/{workspaceNamespace}/{workspaceName}':
    patch:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/Workspace'
        '400':
          description: Attribute does not exist or is of an unexpected type
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: Insufficient permissions to edit workspace attributes
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Update workspace attributes
      tags:
        - workspaces
      summary: Update attributes of a workspace
      operationId: update_workspace
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Update operations
          name: entityUpdateJson
          required: true
          schema:
            $ref: '#/definitions/AttributeUpdateOperation'
      security:
        - authorization:
            - openid
            - email
            - profile
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/WorkspaceListResponse'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get workspace details
      tags:
        - workspaces
      summary: Get workspace details
      operationId: list
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        '202':
          description: Delete request accepted. Workspace bucket will be deleted within 24 hours.
        '403':
          description: Insufficient permissions to delete workspace (must be owner)
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Delete a workspace
      tags:
        - workspaces
      summary: Delete workspace
      operationId: delete_workspace
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/devstorage.full_control
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/clone':
    post:
      responses:
        '201':
          description: Successful Request
          headers:
            Location:
              description: The path to the newly cloned workspace
              type: string
        '400':
          description: Workspace namespace is not ready
          schema:
            $ref: '#/definitions/ErrorReport'
        '403':
          description: User does not have access to create workspace in namespace or user does not have permission to set attributes in the namespace
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: Source workspace not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '409':
          description: Destination workspace already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        '422':
          description: Destination workspace must match source's authorization domain, if the dest has one
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Clone a workspace
      tags:
        - workspaces
      summary: Clone workspace
      operationId: clone
      parameters:
        - in: path
          description: Workspace Namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: Workspace Name
          name: workspaceName
          required: true
          type: string
        - in: body
          description: Request for new workspace
          name: workspaceRequest
          required: true
          schema:
            $ref: '#/definitions/WorkspaceRequest'
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/devstorage.full_control
  '/api/workspaces/{workspaceNamespace}/{workspaceName}/bucketUsage':
      get:
        responses:
          '200':
            description: Successful Request
            schema:
              $ref: '#/definitions/BucketUsageResponse'
        description: Get the storage bucket usage
        tags:
          - workspaces
        summary: Get bucket usage
        operationId: getBucketUsage
        parameters:
          - in: path
            description: Workspace Namespace
            name: workspaceNamespace
            required: true
            type: string
          - in: path
            description: Workspace Name
            name: workspaceName
            required: true
            type: string
        security:
          - authorization:
              - openid
              - email
              - profile
              - https://www.googleapis.com/auth/devstorage.full_control
  '/api/workspaces/tags':
      get:
        responses:
          '200':
            description: Successful Request
            schema:
              type: array
              description: list of all tags used in FireCloud and their associated frequencies
              items:
                $ref: '#/definitions/WorkspaceTag'
          '500':
            description: Rawls Internal Error
            schema:
              $ref: '#/definitions/ErrorReport'
        description: Get all tags used in FireCloud (for autocomplete)
        tags:
          - workspaces
        summary: Get tags
        operationId: getTags
        parameters:
          - in: query
            description: Query string
            name: q
            required: false
            type: string
        security:
        - authorization:
          - openid
          - email
          - profile
  '/register/user':
     post:
       responses:
         '201':
           description: Successful Request
           headers:
            Location:
              description: The path to the newly created user
              type: string
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Create a new user
       tags:
         - users
       summary: Create user
       operationId: create
       parameters:
       security:
         - authorization:
            - openid
            - email
            - profile
     get:
       responses:
         '200':
           description: Successful Request
           schema:
             $ref: '#/definitions/UserStatus'
         '404':
           description: User Not Found
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: Get the status of a user
       tags:
         - users
       summary: gets the status of a user
       operationId: status
       parameters:
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/user/groups':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            description: list of the user's groups
            items:
              type: string
      description: Get the list of groups the user belongs to
      tags:
        - users
      summary: Get groups for user
      operationId: listGroupsForUser
      security:
        - authorization:
           - openid
           - email
           - profile
  '/api/user/refreshToken':
    put:
      responses:
        '201':
          description: Successful Request
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: "store a user's refresh token"
      tags:
        - users
      summary: Store refresh token
      operationId: refreshToken
      parameters:
        - in: body
          description: refresh token
          name: refreshToken
          required: true
          schema:
            $ref: '#/definitions/UserRefreshToken'
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/user/refreshTokenDate':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/UserRefreshTokenDate'
        '400':
          description: Token for the user is invalid
          schema:
            $ref: '#/definitions/ErrorReport'
        '404':
          description: There is no refresh token for the user
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: "get the date the refresh token last updated"
      tags:
        - users
      summary: Get refresh token date
      operationId: refreshTokenDate
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/user/role/admin':
     get:
       responses:
         '200':
           description: User is an admin
         '404':
           description: User is not an admin
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "gets the admin status of a user"
       tags:
         - users
       summary: Query to see if you're an admin
       operationId: isAdmin
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/user/role/curator':
     get:
       responses:
         '200':
           description: User is a curator
         '404':
           description: User is not a curator
         '500':
           description: Rawls Internal Error
           schema:
             $ref: '#/definitions/ErrorReport'
       description: "gets the curator status of a user"
       tags:
         - users
       summary: Query to see if you're a library curator
       operationId: isCurator
       security:
         - authorization:
            - openid
            - email
            - profile
  '/api/user/billing':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            description: list of billing projects for this user
            items:
              $ref: '#/definitions/RawlsBillingProjectMembership'
        '404':
          description:  User not found
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: list billing projects for a user
      tags:
        - billing
        - users
      summary: list billing projects for a user
      operationId: listUserBillingProjects
      security:
        - authorization:
            - openid
            - email
            - profile

  '/api/user/billingAccounts':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            type: array
            description: list of billing accounts for this user
            items:
              $ref: '#/definitions/BillingAccount'
        '403':
          description: Forbidden. You probably missed a scope; more details in the ErrorReport's message field
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: list billing accounts for a user
      tags:
        - billing
        - users
      summary: list billing accounts for a user
      operationId: listUserBillingAccounts
      security:
        - authorization:
            - openid
            - email
            - profile
            - https://www.googleapis.com/auth/cloud-billing

  '/api/user/group/{groupName}':
    get:
      responses:
        '200':
          description: Successful Request
          schema:
            $ref: '#/definitions/RawlsGroupShort'
        '404':
          description: Group not found or user is not a member
          schema:
            $ref: '#/definitions/ErrorReport'
        '500':
          description: Rawls Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      description: Get information about a group a user is a member of
      tags:
        - users
      summary: Get information about a group a user is a member of
      operationId: userGroupMember
      parameters:
        - in: path
          description: name of group
          name: groupName
          required: true
          type: string
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/groups':
    get:
      responses:
        200:
          description: Successfully listed group membership
          schema:
            type: array
            items:
              $ref: '#/definitions/ManagedGroupAccessResponse'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      tags:
        - groups
      summary: get the list of the groups that the caller is a member of
      operationId: getGroups
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/groups/{groupName}':
    get:
      responses:
        200:
          description: Successfully loaded group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        403:
          description: You must be an admin of this group in order to view members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - groups
      summary: view the members in a group
      operationId: getGroup
      security:
        - authorization:
            - openid
            - email
            - profile
    post:
      responses:
        201:
          description: Successfully created group
          schema:
            $ref: '#/definitions/ManagedGroupWithMembers'
        409:
          description: Group already exists
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - groups
      summary: create a new group
      operationId: createGroup
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        204:
          description: Successfully Deleted Group
        403:
          description: You must be an admin of this group in order to delete it
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: Group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        409:
          description: Group is in use and cannot be deleted
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
      tags:
        - groups
      summary: delete a group that the caller owns
      operationId: deleteGroup
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/groups/{groupName}/{role}/{email}':
    put:
      responses:
        204:
          description: Successfully Added User or Group To Group
        403:
          description: You must be an admin of this group in order to add members
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to add
          name: email
          required: true
          type: string
      tags:
        - groups
      summary: add a user or group to a group the caller owns
      operationId: addUserToGroup
      security:
        - authorization:
            - openid
            - email
            - profile
    delete:
      responses:
        204:
          description: Successfully Removed User or Group From Group
        403:
          description: You must be an admin of this group in order to remove members
          schema:
            $ref: '#/definitions/ErrorReport'
        400:
          description: You may not remove yourself as an owner of a group
          schema:
            $ref: '#/definitions/ErrorReport'
        404:
          description: User or group not found
          schema:
            $ref: '#/definitions/ErrorReport'
        500:
          description: FireCloud Internal Error
          schema:
            $ref: '#/definitions/ErrorReport'
      parameters:
        - in: path
          description: Group name
          name: groupName
          required: true
          type: string
        - in: path
          description: role of user for group
          name: role
          required: true
          type: string
          enum: ["member", "admin"]
        - in: path
          description: email of user or group to remove
          name: email
          required: true
          type: string
      tags:
        - groups
      summary: remove a user or group from a group the caller owns
      operationId: removeUserFromGroup
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/notifications/workspace/{workspaceNamespace}/{workspaceName}':
    get:
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationType'
      parameters:
        - in: path
          description: workspace namespace
          name: workspaceNamespace
          required: true
          type: string
        - in: path
          description: workspace name
          name: workspaceName
          required: true
          type: string
      tags:
        - notifications
      summary: Gets the notifications available for a workspace
      operationId: workspaceNotifications
      security:
        - authorization:
            - openid
            - email
            - profile
  '/api/notifications/general':
    get:
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationType'
      tags:
        - notifications
      summary: Gets the general notifications available
      operationId: generalNotifications
      security:
        - authorization:
            - openid
            - email
            - profile
tags:
  - name: admin
    description: Administrative API
  - name: submissions
    description: Submissions API
  - name: entities
    description: Entity manipulation API
  - name: methodconfigs
    description: Method Configuration manipulation API
  - name: workspaces
    description: Workspace manipulation API
  - name: users
    description: User and Group API
  - name: billing
    description: Billing Project API
  - name: groups
    description: Group manipulation API
  - name: notifications
    description: Notifications API

securityDefinitions:
  authorization:
    type: oauth2
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    flow: implicit
    scopes:
      openid: open id authorization
      email: email authorization
      profile: profile authorization
      https://www.googleapis.com/auth/devstorage.full_control: storage authorization
      https://www.googleapis.com/auth/cloud-billing: cloud billing authorization
definitions:
  BillingAccount:
    description: 'Details for a single billing account'
    required:
          - accountName
          - firecloudHasAccess
          - displayName
    properties:
      accountName:
        type: string
        description: name of billing account
      firecloudHasAccess:
        type: boolean
        description: whether the Firecloud service has been given access to this billing account
      displayName:
        type: string
        description: display name of billing account

  ErrorReport:
    description: ''
    required:
      - source
      - message
      - causes
      - stackTrace
    properties:
      source:
        type: string
        description: service causing error
      message:
        type: string
        description: what went wrong
      exceptionClass:
        type: string
        description: class of exception thrown
      statusCode:
        type: integer
        description: HTTP status code
      causes:
        type: array
        description: errors triggering this one
        items:
          $ref: '#/definitions/ErrorReport'
      stackTrace:
        type: array
        description: stack trace
        items:
          $ref: '#/definitions/StackTraceElement'

  EntityCopyResponse:
    description: ''
    required:
      - entitiesCopied
      - softConflicts
      - hardConflicts
    properties:
      entitiesCopied:
        type: array
        description: 'the entities that were successfully copied into the workspace'
        items:
          $ref: '#/definitions/AttributeEntityReference'
      hardConflicts:
        type: array
        description: 'these entities already exist in your workspace'
        items:
          $ref: '#/definitions/EntityHardConflict'
      softConflicts:
        type: array
        description: 'the conflicts within your entity subtrees. note that this will be empty if there are hard conflicts'
        items:
          $ref: '#/definitions/EntitySoftConflict'

  EntityHardConflict:
    description: ''
    required:
      - entityType
      - entityName
    properties:
      entityType:
        type: string
        description: 'the type of the entity'
      entityName:
        type: string
        description: 'the name of the entity'

  EntitySoftConflict:
    description: ''
    required:
      - entityType
      - entityName
      - conflicts
    properties:
      entityType:
        type: string
        description: 'the type of the entity'
      entityName:
        type: string
        description: 'the name of the entity'
      conflicts:
        type: array
        description: 'the next entity in the path to the conflict'
        items:
          $ref: '#/definitions/EntitySoftConflict'

  StackTraceElement:
    description: ''
    required:
      - className
      - methodName
      - fileName
      - lineNumber
    properties:
      className:
        type: string
        description: class name
      methodName:
        type: string
        description: method name
      fileName:
        type: string
        description: source file name
      lineNumber:
        type: integer
        description: line number

  Submission:
    description: ''
    properties:
      submissionId:
        type: string
        description: SubmissionRequest unique identifier
      submissionDate:
        type: string
        format: date-time
        description: SubmissionRequest date
      submitter:
        type: string
        description: user that created the submission
      methodConfigurationNamespace:
        type: string
        description: Method configuration namespace
      methodConfigurationName:
        type: string
        description: Method configuration name
      submissionEntity:
        $ref: '#/definitions/AttributeEntityReference'
      workflows:
        type: array
        description: Status of Workflow(s)
        items:
          $ref: '#/definitions/Workflow'
      status:
        $ref: '#/definitions/SubmissionStatus'
        description: Status

  SubmissionListResponse:
    description: 'An abbreviated Submission, without workflow information, good for listings'
    properties:
      submissionId:
        type: string
        description: Submission unique identifier
      submissionDate:
        type: string
        format: date-time
        description: Submission date
      submitter:
        type: string
        description: user that created the submission
      methodConfigurationNamespace:
        type: string
        description: Method configuration namespace
      methodConfigurationName:
        type: string
        description: Method configuration name
      submissionEntity:
        $ref: '#/definitions/AttributeEntityReference'
        description: Status
      status:
        $ref: '#/definitions/SubmissionStatus'
        description: Status
      workflowStatuses:
        type: object
        description: Map[String,Int]
        description: a count of the workflow statuses in the submission

  ActiveSubmission:
    description: a submission that's still a going concern
    properties:
      workspaceNamespace:
        type: string
        description: workspaceNamespace of the submission
      workspaceName:
        type: string
        description: workspaceName of the submission
      submission:
        $ref: '#/definitions/Submission'
        description: the submission itself

  SubmissionStatus:
    description: ''
    properties:
      name:
        type: string
        description: submission status

  Workflow:
    description: ''
    properties:
      workflowId:
        type: string
        description: Workflow unique identifier
      status:
        $ref: '#/definitions/WorkflowStatus'
        description: Workflow status
      statusLastChangedDate:
        type: string
        format: date-time
        description: Status last-changed date
      workflowEntity:
        $ref: '#/definitions/AttributeEntityReference'
      inputResolutions:
        type: array
        items:
          $ref: '#/definitions/SubmissionValidationValue'
        description: The evaluation of each input
      messages:
        type: array
        description: List of messages about this workflow
        items:
          type: string
  WorkflowStatus:
    properties:
      done:
        type: boolean

  SubmissionRequest:
    description: ''
    required:
      - methodConfigurationNamespace
      - methodConfigurationName
      - entityType
      - entityName
    properties:
      methodConfigurationNamespace:
        type: string
        description: Namespace of the method configuration to execute.
      methodConfigurationName:
        type: string
        description: Name of the method configuration to execute.
      entityType:
        type: string
        description: Type of root entity for expression.
      entityName:
        type: string
        description: Name of root entity for expression.
      expression:
        type: string
        description: Expression that resolves to one or more entities matching the entity type in the method configuration.
      useCallCache:
        type: boolean
        description: Whether or not to read from cache for this submission

  SubmissionValidationInput:
    description: 'method configuration input parameter, it''s name and the associated expression from the method config'
    required:
      - wdlName
      - expression
    properties:
      wdlName:
        type: string
        description: name of input
      expression:
        type: string
        description: expression for input

  SubmissionValidationHeader:
    description: common values for all the entities -- the entity type and the input descriptions
    required:
      - entityType
      - inputExpressions
    properties:
      entityType:
        type: string
        description: type of entity
      inputExpressions:
        type: array
        description: input descriptions
        items:
          $ref: '#/definitions/SubmissionValidationInput'

  SubmissionValidationValue:
    description: result of an expression parse for one of the inputs
    required:
      - inputName
    properties:
      value:
        type: string
        description: the value of the input expression for the specified entity
      error:
        type: string
        description: parsing error(s)
      inputName:
        type: string
        description: name of input

  SubmissionValidationEntityInputs:
    description: the results of parsing each of the inputs for one entity
    required:
      - entityName
      - inputResolutions
    properties:
      entityName:
        type: string
        description: name of entity
      inputResolutions:
        type: array
        description: input resolution
        items:
          $ref: '#/definitions/SubmissionValidationValue'

  SubmissionValidationReport:
    description: the results of parsing each input for each entity
    required:
      - request
      - header
      - validEntities
      - invalidEntities
    properties:
      header:
        $ref: '#/definitions/SubmissionValidationHeader'
        description: common values for all entities
      validEntities:
        type: array
        description: runnable entities
        items:
          $ref: '#/definitions/SubmissionValidationEntityInputs'
      invalidEntities:
        type: array
        description: non-runnable entities
        items:
          $ref: '#/definitions/SubmissionValidationEntityInputs'
      request:
        $ref: '#/definitions/SubmissionRequest'

  TaskOutput:
    description: Outputs from a single task in a workflow
    properties:
      logs:
        type: array
        description: logs for this task
        items:
          $ref: '#/definitions/ExecutionServiceCallLogs'
      outputs:
        $ref: ''
        description: Map[String,String]

  ExecutionServiceCallLogs:
    description: Execution service logs per call
    properties:
      stdout:
        type: string
        description: Google bucket location for standard output
      stderr:
        type: string
        description: Google bucket location for standard error
      backendLogs:
        $ref: ''
        description: Map[String,String]

  SubmissionReport:
    description: information on a submission
    required:
      - request
      - submissionId
      - submissionDate
      - submitter
      - status
      - header
      - workflows
    properties:
      request:
        $ref: '#/definitions/SubmissionRequest'
        description: the request data
      submissionId:
        type: string
        description: SubmissionRequest unique identifier
      submissionDate:
        type: string
        format: date-time
        description: SubmissionRequest date
      submitter:
        type: string
        description: user that created the submission
      status:
        type: string
        description: status
      header:
        $ref: '#/definitions/SubmissionValidationHeader'
        description: common values for all entities
      workflows:
        type: array
        description: workflows initiated by this submission
        items:
          $ref: '#/definitions/SubmissionValidationEntityInputs'

  WorkflowOutputs:
    description: Outputs and logs from all tasks in a workflow
    properties:
      tasks:
        type: array
        description: Map from tasks to output/log pairs
        items:
          $ref: '#/definitions/TaskOutput'
      workflowId:
        type: string
        description: The id of this workflow

  WorkflowQueueStatusResponse:
    description: Information about the status of workflows and the workflow queue
    required:
      - estimatedQueueTimeMS
      - workflowsBeforeNextUserWorkflow
      - workflowCountsByStatus
    properties:
      estimatedQueueTimeMS:
        type: integer
        description: estimated milliseconds until the current queue is submitted
      workflowsBeforeNextUserWorkflow:
        type: integer
        description: the number of workflows in the queue ahead of the user's first workflow
      workflowCountsByStatus:
        type: object
        description: Map[String,Int]

  WorkspaceName:
    description: ''
    required:
      - namespace
      - name
    properties:
      namespace:
        type: string
        description: The namespace (billing project) the workspace belongs to
      name:
        type: string
        description: The name of the workspace

  EntityName:
    description: ''
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the entity

  EntityCopyDefinition:
    description: ''
    required:
      - sourceWorkspace
      - destinationWorkspace
      - entityType
      - entityNames
    properties:
      sourceWorkspace:
        $ref: '#/definitions/WorkspaceName'
        description: The source workspace of the entities
      destinationWorkspace:
        $ref: '#/definitions/WorkspaceName'
        description: The destination workspace for the entities
      entityType:
        type: string
        description: Type of top level entities to copy
      entityNames:
        type: array
        description: Names of entities to copy
        items:
          type: string

  Entity:
    description: ''
    required:
      - name
      - entityType
      - attributes
    properties:
      name:
        type: string
        description: The name of the entity
      entityType:
        type: string
        description: The type of the entity
      attributes:
        type: ''
        description: Map[String,Attribute]

  AttributeEntityReference:
    description: ''
    required:
      - entityType
      - entityName
    properties:
      entityType:
        type: string
        description: The type of the entity
      entityName:
        type: string
        description: The name of the entity

  EntityTypeMetadata:
    description: ''
    required:
      - count
      - attributeNames
    properties:
      count:
        type: int
        description: The number of entities of this type
      idName:
        type: string
        description: The name if the id field for the entity
      attributeNames:
        type: array
        description: A list of all attribute names used
        items:
          type: string

  AttributeUpdateOperation:
    description: ''
    properties:
      Example payload for AddUpdateAttribute:
        $ref: '#/definitions/AddUpdateAttribute'
      Example payload for RemoveAttribute:
        $ref: '#/definitions/RemoveAttribute'
      Example payload for AddListMember:
        $ref: '#/definitions/AddListMember'
      Example payload for RemoveListMember:
        $ref: '#/definitions/RemoveListMember'
      Example payload for CreateAttributeEntityReferenceList:
        $ref: '#/definitions/CreateAttributeEntityReferenceList'
      Example payload for CreateAttributeValueList:
        $ref: '#/definitions/CreateAttributeValueList'

  AddUpdateAttribute:
    description: ''
    required:
      - op
      - attributeName
      - addUpdateAttribute
    properties:
      op:
        type: string
        description: The operation to perform on the attribute
      attributeName:
        type: string
        description: The name of the attribute
      addUpdateAttribute:
        type: string
        description: The update attribute

  RemoveAttribute:
    description: ''
    required:
      - op
      - attributeName
    properties:
      op:
        type: string
        description: The operation to perform on the attribute
      attributeName:
        type: string
        description: The name of the attribute

  AddListMember:
    description: ''
    required:
      - op
      - attributeListName
      - newMember
    properties:
      op:
        type: string
        description: The operation to perform on the attribute. The attribute type must match the list type, reference or value
      attributeListName:
        type: string
        description: The name of the attribute list
      newMember:
        type: string
        description: The attribute to add

  RemoveListMember:
    description: ''
    required:
      - op
      - attributeListName
      - removeMember
    properties:
      op:
        type: string
        description: The operation to perform on the attribute
      attributeListName:
        type: string
        description: The name of the attribute list
      removeMember:
        type: string
        description: The attribute to remove

  CreateAttributeEntityReferenceList:
    description: ''
    required:
      - op
      - attributeListName
    properties:
      op:
        type: string
        description: The operation to perform on the attribute
      attributeListName:
        type: string
        description: The name of the empty attribute entity reference list to create. This is a non-destructive operation.

  CreateAttributeValueList:
    description: ''
    required:
      - op
      - attributeListName
    properties:
      op:
        type: string
        description: The operation to perform on the attribute
      attributeListName:
        type: string
        description: The name of the empty attribute value list to create. This is a non-destructive operation.

  EntityUpdateDefinition:
    description: ''
    required:
      - name
      - entityType
      - operations
    properties:
      name:
        type: string
        description: The name of the entity
      entityType:
        type: string
        description: The type of the entity
      operations:
        $ref: '#/definitions/AttributeUpdateOperation'

  MethodConfiguration:
    description: ''
    required:
      - namespace
      - name
      - rootEntityType
      - inputs
      - methodRepoMethod
    properties:
      namespace:
        type: string
        description: 'This method configuration''s namespace'
      name:
        type: string
        description: The name of the method configuration
      rootEntityType:
        type: string
        description: The root entity type that the method will be running on
      prerequisites:
        $ref: ''
      inputs:
        $ref: ''
      outputs:
        $ref: ''
      methodRepoMethod:
        $ref: '#/definitions/MethodRepoMethod'
        description: The properties of the method from the method store that this config is associated with

  ValidatedMethodConfiguration:
    description: ''
    required:
      - methodConfiguration
      - validInputs
      - invalidInputs
      - validOutputs
      - invalidOutputs
    properties:
      validInputs:
        type: array
        items:
          type: string
      invalidInputs:
        $ref: ''
      validOutputs:
        type: array
        items:
          type: string
      invalidOutputs:
        $ref: ''
      methodConfiguration:
        $ref: '#/definitions/MethodConfiguration'

  MethodRepoConfigurationImport:
    description: ''
    required:
      - methodRepoNamespace
      - methodRepoName
      - methodRepoSnapshotId
      - destination
    properties:
      methodRepoNamespace:
        type: string
        description: Method Repository Namespace
      methodRepoName:
        type: string
        description: Method Repository Name
      methodRepoSnapshotId:
        type: integer
        description: Method Repository Snapshot ID
      destination:
        $ref: '#/definitions/MethodConfigurationName'
        description: The destination for a copied method configuration

  MethodRepoConfigurationExport:
    description: ''
    required:
      - methodRepoNamespace
      - methodRepoName
      - source
    properties:
      methodRepoNamespace:
        type: string
        description: Method Repository Namespace
      methodRepoName:
        type: string
        description: Method Repository Name
      source:
        $ref: '#/definitions/MethodConfigurationName'
        description: The source method configuration

  MethodConfigurationNamePair:
    description: ''
    required:
      - source
      - destination
    properties:
      source:
        $ref: '#/definitions/MethodConfigurationName'
        description: The source of a copied method configuration
      destination:
        $ref: '#/definitions/MethodConfigurationName'
        description: The destination for a copied method configuration

  MethodConfigurationName:
    description: ''
    required:
      - name
      - namespace
      - workspaceName
    properties:
      name:
        type: string
        description: The name of the method configuration
      namespace:
        type: string
        description: 'This method configuration''s owning namespace'
      workspaceName:
        $ref: '#/definitions/WorkspaceName'
        description: 'This method configuration''s owning workspace'

  MethodRepoMethod:
    description: ''
    required:
      - methodNamespace
      - methodName
      - methodVersion
    properties:
      methodNamespace:
        type: string
        description: The namespace of method from method store
      methodName:
        type: string
        description: The name of method from method store
      methodVersion:
        type: integer
        description: The version of method from method store

  WorkspaceACL:
    description: ''
    required:
      - acl
    properties:
      acl:
        $ref: ''
        description: Map[String,WorkspaceAccessEntry]

  WorkspaceACLUpdate:
    description: ''
    required:
      - email
      - accessLevel
      - canShare
    properties:
      email:
        type: string
        description: email address of the user or group whose permissions will be changed
      accessLevel:
        type: string
        description: The access level to grant to this user or group (OWNER, READER, WRITER, NO ACCESS)
      canShare:
        type: boolean
        description: Set to true if you want this user to be able to share the workspace with other users

  WorkspaceACLUpdateResponseList:
    description: ''
    required:
      - usersUpdated
      - invitesSent
      - invitesUpdated
      - usersNotFound
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      invitesSent:
        type: array
        description: the list of invites that were sent
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      invitesUpdated:
        type: array
        description: the list of invites that were updated
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'
      usersNotFound:
        type: array
        description: the users or groups who were not found
        items:
          $ref: '#/definitions/WorkspaceACLUpdate'

  WorkspaceCatalog:
    description: ''
    required:
      - email
      - catalog
    properties:
      email:
        type: string
        description: email of the user or group whose permissions will be changed
      catalog:
        type: boolean
        description: Set to true if you want this user to be able to perform library related operations on the workspace

  WorkspaceCatalogResponse:
    description: ''
    required:
      - subjectId
      - catalog
    properties:
      subjectId:
        type: string
        description: subject Id of the user or group whose permissions will be changed
      catalog:
        type: boolean
        description: Set to true if you want this user to be able to perform library related operations on the workspace

  WorkspaceCatalogUpdateResponseList:
    description: ''
    required:
      - usersUpdated
      - emailsNotFound
    properties:
      usersUpdated:
        type: array
        description: the users or groups who were updated
        items:
          $ref: '#/definitions/WorkspaceCatalogResponse'
      emailsNotFound:
        type: array
        description: the emails of users or groups who were not found
        items:
          type: string

  WorkspaceAccessEntry:
    description: ''
    required:
      - accessLevel
      - pending
      - canShare
    properties:
      accessLevel:
        type: string
        description: The access level granted to this user or group (OWNER, READER, WRITER, NO ACCESS)
      pending:
        type: boolean
        description: The status of the users access
      canShare:
        type: boolean
        description: True if the user can share the workspace with others, false otherwise

  Workspace:
    description: ''
    required:
      - namespace
      - name
      - workspaceId
      - bucketName
      - createdDate
      - createdBy
      - attributes
      - accessLevels
    properties:
      namespace:
        type: string
        description: The namespace the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        $ref: '#/definitions/ManagedGroupRef'
        description: An optional Authorization Domain for the workspace
      workspaceId:
        type: string
        description: A UUID associated with the workspace
      bucketName:
        type: string
        description: The name of the bucket associated with the workspace
      createdDate:
        type: string
        format: date-time
        description: 'The date the workspace was created in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      lastModified:
        type: string
        format: date-time
        description: 'The date the workspace was last modified in yyyy-MM-ddTHH:mm:ss.SSSZZ format'
      createdBy:
        type: string
        description: The user who created the workspace
      attributes:
        $ref: ''
        description: Map[String, Attribute]
      accessLevels:
         $ref: ''
         description: Map[String, RawlsGroupRef]
      authDomainACLs:
         $ref: ''
         description: Map[String, RawlsGroupRef]
      isLocked:
        type: boolean
        description: Can the Workspace currently be modified?

  WorkspaceSubmissionStats:
    description: Statistics about submissions in a workspace
    required:
      - runningSubmissionsCount
    properties:
      lastSuccessDate:
        type: string
        format: date-time
        description: The date of the last successful workflow
      lastFailureDate:
        type: string
        format: date-time
        description: The date of the last failed workflow
      runningSubmissionsCount:
        type: integer
        description: Count of all the running submissions

  WorkspaceRequest:
    description: ''
    required:
      - namespace
      - name
      - attributes
    properties:
      namespace:
        type: string
        description: The namespace (billing project) the workspace belongs to
      name:
        type: string
        description: The name of the workspace
      authorizationDomain:
        $ref: '#/definitions/ManagedGroupRef'
        description: An optional Authorization Domain for the workspace
      attributes:
        $ref: ''

  BucketUsageResponse:
    description: ''
    required:
      - usageInBytes
    properties:
      usageInBytes:
        type: integer
        description: The current storage bucket usage in bytes

  Attribute:
    description: ''
    properties:
      value:
        type: string
        description: ''

  RawlsGroupMemberList:
    description: a member list of users and groups, users may be specified by email address or their subject id, sub groups may be specified by their email address or name, combinations of any or all are allowed in a single request
    properties:
      userEmails:
        type: array
        items:
          type: string
      subGroupEmails:
        type: array
        items:
          type: string
      userSubjectIds:
        type: array
        items:
          type: string
      subGroupNames:
        type: array
        items:
          type: string

  RawlsGroupRef:
    description: a reference to a group
    properties:
      groupName:
        type: string
        description: ''

  RawlsGroupShort:
    description: group information without memberships
    properties:
      groupName:
        type: string
        description: ''
      groupEmail:
        type: string
        description: ''

  ExecutionEvent:
    description: ''
    required:
      - description
      - startTime
    properties:
      description:
        type: string
        description: Description of the event
      startTime:
        type: date-time
        description: When the event started
      endTime:
        type: date-time
        description: When the event finished

  WorkspaceResponse:
    description: ''
    properties:
      accessLevel:
        $ref: '#/definitions/WorkspaceAccessLevel'
      canShare:
        type: boolean
      catalog:
        type: boolean
      workspace:
        $ref: '#/definitions/Workspace'
      workspaceSubmissionStats:
        $ref: '#/definitions/WorkspaceSubmissionStats'
      owners:
        type: array
        items:
          type: string
  WorkspaceListResponse:
    description: ''
    properties:
      accessLevel:
        $ref: '#/definitions/WorkspaceAccessLevel'
      workspace:
        $ref: '#/definitions/Workspace'
      workspaceSubmissionStats:
        $ref: '#/definitions/WorkspaceSubmissionStats'
      owners:
        type: array
        items:
          type: string
  CallMetadata:
    description: Stuff you need to know about calls
    properties:
      inputs:
        type: object
        description: map from input names onto resolved values
      executionStatus:
        type: string
        description: status of call
      executionEvents:
          schema:
            type: array
            items:
              $ref: '#/definitions/ExecutionEvent'
      backendStatus:
        type: string
        description: status of the backend
      backendLogs:
        type: object
        description: map of log files from backend
      outputs:
        type: object
        description: map from output names to local files
      start:
        type: string
        format: date-time
        description: starting time of call
      end:
        type: string
        format: date-time
        description: ending time of call
      jobId:
        type: string
        description: unique ID of job
      returnCode:
        type: integer
        description: result code
      backend:
        type: string
        description: type of backend executing the call
      stdout:
        type: string
        description: location of stdout
      stderr:
        type: string
        description: location of stderr
      shardIndex:
        type: integer
        description: call index within a scatter block, as reported by execution service
  AgoraEntity:
    description: response from Method Repo
    properties:
      namespace:
        type: string
      name:
        type: string
      snapshotId:
        type: string
      synopsis:
        type: string
      documentation:
        type: string
      owner:
        type: string
      createDate:
        type: string
      payload:
        type: string
      url:
        type: string
      entityType:
        type: string
  UserRefreshToken:
    description: payload to put a refresh token
    properties:
      refreshToken:
        type: string
  UserRefreshTokenDate:
    description: date a refresh token was stored
    properties:
      refreshTokenUpdatedDate:
        type: string
        format: date-time
  UserStatus:
    description: users status
    properties:
      userInfo:
        $ref: '#/definitions/RawlsUser'
      enabled:
        type: ''
        description: Map[String,Boolean]
  RawlsUser:
    description: information about a rawls user
    properties:
      userSubjectId:
        type: string
      userEmail:
        type: string
  RawlsUserInfo:
    description: information about a rawls user
    properties:
      user:
        $ref: '#/definitions/RawlsUser'
      billingProjects:
        type: array
        items:
          type: string
  RawlsUserInfoList:
    description: a list of rawls users and their info
    properties:
      userInfoList:
        type: array
        items:
          $ref: '#/definitions/RawlsUserInfo'
  MethodInput:
    description: description of a method input
    properties:
      name:
        type: string
      inputType:
        type: string
      optional:
        type: boolean
  MethodOutput:
    description: description of a method output
    properties:
      name:
        type: string
      outputType:
        type: string
  MethodInputsOutputs:
    description: description of a method's inputs and outputs
    properties:
      inputs:
        type: array
        items:
          $ref: '#/definitions/MethodInput'
      outputs:
        type: array
        items:
          $ref: '#/definitions/MethodOutput'
  SyncReportItem:
    description: results of an attempt to synchronize a member
    properties:
      operation:
        type: string
      email:
        type: string
      errorReport:
        $ref: '#/definitions/ErrorReport'
  SyncReport:
    description: report of members added or removed
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/SyncReportItem'
  ApplicationVersion:
    description: version of the application
    properties:
      gitHash:
        type: string
      buildNumber:
        type: string
      version:
        type: string
  ExecutionEngineVersion:
    description: version of the execution engine
    properties:
      cromwell:
        type: string
  EntityQueryParameters:
    description: ''
    required:
      - page
      - pageSize
      - sortField
      - sortDirection
    properties:
      page:
        type: number
        description: page number, 1-indexed positive integer
      pageSize:
        type: number
        description: count of items per page, positive integer
      sortField:
        type: string
        description: field to sort by
      sortDirection:
        type: string
        description: asc or desc
      filterTerms:
        type: string
        descriptions: terms to filter results by
  EntityQueryResultMetadata:
    description: ''
    required:
      - unfilteredCount
      - filteredCount
      - filteredPageCount
    properties:
      unfilteredCount:
        type: number
        description: count of results before filtering
      filteredCount:
        type: number
        description: count of results after filtering
      filteredPageCount:
        type: number
        description: count of pages after filtering; honors pageSize parameter
  EntityQueryResponse:
    description: ''
    required:
      - parameters
      - resultMetadata
      - results
    properties:
      parameters:
        $ref: '#/definitions/EntityQueryParameters'
      resultMetadata:
        $ref: '#/definitions/EntityQueryResultMetadata'
      results:
        type: array
        items:
          $ref: '#/definitions/Entity'
  CreateRawlsBillingProjectFullRequest:
    description: ''
    required:
      - projectName
      - billingAccount
    properties:
      projectName:
        type: string
        description: the name of the project to create
      billingAccount:
        type: string
        description: the id of the billing account to use, must start with 'billingAccounts/'
  RawlsBillingProjectMembership:
    description: an element of a list of projects and related role for a user
    required:
      - projectName
      - role
      - status
    properties:
      projectName:
        type: string
        description: the name of the project to create
      role:
        type: string
        description: the role of the current user in the project
      status:
        type: string
        enum: ["Creating", "Ready", "Error"]
      message:
        type: string
        description: informational message about the project
  RawlsBillingProjectMember:
    description: an element of a list of project users and their role
    required:
      - email
      - role
    properties:
      email:
        type: string
        description: the email of the user
      role:
        type: string
        description: the role of the user in the project
  WorkspaceTag:
    description: tag with count
    required:
      - tag
      - count
    properties:
      tag:
        type: string
        description: tag string
      count:
        type: number
        description: number of usages of the tag across FireCloud
  ManagedGroupRef:
    description: a reference to a group that can be managed by users
    required:
      - usersGroupName
    properties:
      usersGroupName:
        type: string
  ManagedGroupAccessResponse:
    description: an element of a list of groups a user has access to
    required:
      - groupName
      - accessLevels
    properties:
      groupName:
        type: string
      accessLevels:
        type: array
        items:
          type: string
  ManagedGroupWithMembers:
    description: a group with all of its members
    required:
      - usersGroup
      - ownersGroup
      - usersEmails
      - ownersEmails
    properties:
      usersGroup:
        $ref: '#/definitions/RawlsGroupShort'
      ownersGroup:
        $ref: '#/definitions/RawlsGroupShort'
      usersEmails:
        type: array
        items:
          type: string
      ownersEmails:
        type: array
        items:
          type: string
  NotificationType:
    description: key and description of a notification
    required:
      - notificationKey
      - description
    properties:
      notificationKey:
        type: string
      description:
        type: string
