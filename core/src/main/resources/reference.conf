submission-monitor-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 20
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 1
}

health-monitor-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 8
  }
  throughput = 1
}

gcs {
  bucketLogsMaxAge = "180"
}

submissionmonitor {
  submissionPollInterval = 1m
  trackDetailedSubmissionMetrics = true
}

wdl-parsing {
  # number of parsed WDLs to cache
  cache-max-size = 7500
  # TTL for WDLs where the parser returned normally
  # 432000 seconds = 5 days
  cache-ttl-success-seconds = 432000
  # TTL for WDLs where the parser encountered a transient/retryable error, such as a timeout.
  # Set this to zero to not cache these failures. Set this to a low number to return the cached failure
  # to any queued threads waiting on WDL parsing, and thus allow the queue to drain quickly instead
  # of backing up on a slow error
  cache-ttl-failure-seconds = 2
  # timeout for WDL parsing
  parser-thread-pool-timeout-seconds = 50
}

akka.http.host-connection-pool.max-open-requests = 16384
akka.http.host-connection-pool.max-connections = 20
akka.http.server.idle-timeout = 210 s
akka.http.server.request-timeout=180 s
